Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_57__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_57__Default_Changelist_.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_57__Default_Changelist_.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_57_[Default_Changelist]" date="1618761451117" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_57_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2021-04-19 오전 12:57 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_57__Default_Changelist_1.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_57__Default_Changelist_1.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_57__Default_Changelist_1.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_57_[Default_Changelist]1" date="1618761474076" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_57_[Default_Changelist]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2021-04-19 오전 12:57 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_54__Default_Changelist_1.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_54__Default_Changelist_1.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_54__Default_Changelist_1.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_54_[Default_Changelist]1" date="1618761312659" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_54_[Default_Changelist]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2021-04-19 오전 12:54 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_54__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_54__Default_Changelist_.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19__12_54__Default_Changelist_.xml	(revision 6ccc16165cf7e3047c5cde4934f7fbc2366bb060)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_54_[Default_Changelist]" date="1618761288221" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2021-04-19_오전_12_54_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2021-04-19 오전 12:54 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: app/app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/proguard-rules.pro	(date 1619792218000)
+++ app/app/proguard-rules.pro	(date 1619792218000)
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: app/app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/.gitignore	(date 1619792218000)
+++ app/app/.gitignore	(date 1619792218000)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: app/app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/build.gradle	(date 1619836540000)
+++ app/app/build.gradle	(date 1619836540000)
@@ -0,0 +1,42 @@
+plugins {
+    id 'com.android.application'
+}
+
+android {
+    compileSdkVersion 30
+    buildToolsVersion "30.0.3"
+
+    defaultConfig {
+        applicationId "com.holy.scheduleapp"
+        minSdkVersion 26
+        targetSdkVersion 30
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+        }
+    }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
+}
+
+dependencies {
+
+    implementation 'androidx.appcompat:appcompat:1.2.0'
+    implementation 'com.google.android.material:material:1.3.0'
+    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
+    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
+    implementation 'androidx.wear:wear:1.0.0'
+    testImplementation 'junit:junit:4.+'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
+    compileOnly 'com.google.android.wearable:wearable:2.6.0'
+}
\ No newline at end of file
Index: app/src/main/res/layout/calendar_grid.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/calendar_grid.xml	(date 1619845766000)
+++ app/src/main/res/layout/calendar_grid.xml	(date 1619845766000)
@@ -0,0 +1,356 @@
+<?xml version="1.0" encoding="utf-8"?>
+<GridLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_marginTop="60dp"
+    android:layout_width="match_parent"
+    android:layout_height="280dp"
+    android:layout_marginStart="20dp"
+    android:layout_marginEnd="20dp"
+    android:columnCount="7"
+    android:rowCount="7">
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+</GridLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_product.xml	(date 1619850312000)
+++ app/src/main/res/layout/item_product.xml	(date 1619850312000)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginBottom="10dp">
+
+    <TextView
+        android:id="@+id/txtProductTitle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TS"
+        android:textStyle="bold"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtDivider"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginEnd="8dp"
+        android:layout_toEndOf="@id/txtProductTitle"
+        android:text="|"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtProductType"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_toEndOf="@id/txtDivider"
+        android:text="샴푸"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtProductOpenDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_toStartOf="@id/txtWave"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtWave"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_marginStart="4dp"
+        android:layout_marginEnd="4dp"
+        android:layout_toStartOf="@id/txtProductDueDate"
+        android:text="~"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtProductDueDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentEnd="true"
+        android:layout_centerVertical="true"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_calendar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_calendar.xml	(date 1620308167579)
+++ app/src/main/res/layout/fragment_calendar.xml	(date 1620308167579)
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".CalendarActivity">
+
+    <!-- 헤더 -->
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="10dp">
+
+        <ImageButton
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentStart="true"
+            android:layout_marginStart="10dp"
+            android:background="@drawable/ic_person"
+            android:contentDescription="@string/app_name" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:layout_centerVertical="true"
+            android:text="@string/saving_days"
+            android:textColor="@color/gray"
+            android:textSize="22sp"
+            android:textStyle="bold" />
+
+        <ImageButton
+            android:id="@+id/ibtnAdd"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentEnd="true"
+            android:layout_marginEnd="10dp"
+            android:background="@drawable/ic_add"
+            android:backgroundTint="@color/green"
+            android:contentDescription="@string/app_name" />
+
+    </RelativeLayout>
+    <!-- 끝 : 헤더 -->
+
+    <!-- 가로선 -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:layout_marginBottom="10dp"
+        android:background="#DDD" />
+
+    <!-- 달 변경 레이아웃 -->
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:layout_marginBottom="4dp"
+        android:orientation="horizontal">
+
+        <ImageButton
+            android:id="@+id/ibtnPrevMonth"
+            android:layout_width="32dp"
+            android:layout_height="32dp"
+            android:background="@drawable/ic_left"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/app_name" />
+
+        <TextView
+            android:id="@+id/txtSelectedMonth"
+            android:layout_width="180dp"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="10dp"
+            android:layout_marginEnd="10dp"
+            android:gravity="center_horizontal"
+            android:text="March 2021"
+            android:textColor="@color/gray"
+            android:textSize="20sp"
+            android:textStyle="bold"
+            tools:ignore="HardcodedText" />
+
+        <ImageButton
+            android:id="@+id/ibtnNextMonth"
+            android:layout_width="32dp"
+            android:layout_height="32dp"
+            android:background="@drawable/ic_right"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/app_name" />
+
+    </LinearLayout>
+    <!-- 끝 : 달 변경 레이아웃 -->
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <include
+            android:id="@+id/calendar_grid"
+            layout="@layout/calendar_grid"
+            android:layout_width="match_parent"
+            android:layout_height="280dp"
+            android:layout_marginStart="20dp"
+            android:layout_marginTop="58dp"
+            android:layout_marginEnd="20dp" />
+
+        <!-- 달력 레이아웃 -->
+        <CalendarView
+            android:id="@+id/calendar"
+            android:layout_width="match_parent"
+            android:layout_height="340dp" />
+
+        <!-- 버튼 레이아웃 -->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="60dp"
+            android:background="@color/white"
+            android:orientation="horizontal">
+
+            <!-- 일정 버튼 -->
+            <Button
+                android:id="@+id/btnSchedule"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="30dp"
+                android:layout_marginEnd="16dp"
+                android:layout_weight="1"
+                android:backgroundTint="@color/green"
+                android:text="@string/schedule"
+                android:textColor="@color/white"
+                tools:ignore="ButtonStyle" />
+
+            <!-- 음식 버튼 -->
+            <Button
+                android:id="@+id/btnFood"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="16dp"
+                android:layout_weight="1"
+                android:backgroundTint="@color/white"
+                android:text="@string/food"
+                android:textColor="@color/gray"
+                tools:ignore="ButtonStyle" />
+
+            <!-- 소모품 버튼 -->
+            <Button
+                android:id="@+id/btnProduct"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="30dp"
+                android:layout_weight="1"
+                android:backgroundTint="@color/white"
+                android:text="@string/product"
+                android:textColor="@color/gray"
+                tools:ignore="ButtonStyle" />
+
+        </LinearLayout>
+        <!-- 끝 : 버튼 레이아웃 -->
+
+    </FrameLayout>
+
+    <androidx.cardview.widget.CardView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="20dp"
+        app:cardBackgroundColor="#EEE"
+        app:cardCornerRadius="8dp">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <TextView
+                android:id="@+id/txtNoItems"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:padding="16dp"
+                android:text="@string/please_add_new_item" />
+
+            <!-- 리사이클러뷰 -->
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/recycler"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:paddingStart="16dp"
+                android:paddingTop="16dp"
+                android:paddingEnd="16dp"
+                android:paddingBottom="6dp" />
+
+        </FrameLayout>
+
+    </androidx.cardview.widget.CardView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_add_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_add_product.xml	(date 1619847664000)
+++ app/src/main/res/layout/activity_add_product.xml	(date 1619847664000)
@@ -0,0 +1,117 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="10dp"
+    tools:context=".AddProductActivity">
+
+    <!-- 버튼 레이아웃 -->
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="10dp">
+
+        <!-- 취소 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnCancel"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentStart="true"
+            android:background="@drawable/ic_close"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/cancel" />
+
+        <!-- 확인 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnConfirm"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentEnd="true"
+            android:background="@drawable/ic_check"
+            android:backgroundTint="@color/green"
+            android:contentDescription="@string/confirm" />
+
+    </RelativeLayout>
+
+    <!-- EditText: 소모품 제목 -->
+    <EditText
+        android:id="@+id/editProductTitle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="20dp"
+        android:autofillHints=""
+        android:hint="@string/product_title"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+    <!-- 제품군 스피너 -->
+    <Spinner
+        android:id="@+id/spinnerProductType"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="50dp" />
+
+    <!-- 기한/알림 레이아웃 -->
+    <GridLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:columnCount="2">
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/open_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+
+        <Button
+            android:id="@+id/btnOpenDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/due_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnDueDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/notification"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnNotification"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="알림 없음"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+    </GridLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/AndroidManifest.xml	(date 1619841568000)
+++ app/app/src/main/AndroidManifest.xml	(date 1619841568000)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.holy.scheduleapp">
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/Theme.ScheduleApp">
+
+        <activity
+            android:name=".AddProductActivity"
+            android:label="@string/title_activity_add_product" />
+
+        <activity
+            android:name=".AddScheduleActivity"
+            android:label="@string/title_activity_add_schedule" />
+
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+
+    </application>
+
+</manifest>
\ No newline at end of file
Index: app/src/main/res/layout/activity_add_schedule.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_add_schedule.xml	(date 1619847664000)
+++ app/src/main/res/layout/activity_add_schedule.xml	(date 1619847664000)
@@ -0,0 +1,110 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="10dp"
+    tools:context=".AddScheduleActivity">
+
+    <!-- 버튼 레이아웃 -->
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="10dp">
+
+        <!-- 취소 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnCancel"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentStart="true"
+            android:background="@drawable/ic_close"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/cancel" />
+
+        <!-- 확인 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnConfirm"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentEnd="true"
+            android:background="@drawable/ic_check"
+            android:backgroundTint="@color/green"
+            android:contentDescription="@string/confirm" />
+
+    </RelativeLayout>
+
+    <!-- EditText: 일정 제목 -->
+    <EditText
+        android:id="@+id/editScheduleTitle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="20dp"
+        android:autofillHints=""
+        android:hint="@string/schedule_title"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+    <!-- 날짜/알림 레이아웃 -->
+    <GridLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:columnCount="2">
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/start_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+
+        <Button
+            android:id="@+id/btnStartDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/end_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnEndDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/notification"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnNotification"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="알림 없음"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+    </GridLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_schedule.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_schedule.xml	(date 1619850312000)
+++ app/src/main/res/layout/item_schedule.xml	(date 1619850312000)
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginBottom="10dp">
+
+    <TextView
+        android:id="@+id/txtScheduleTitle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="등산하기"
+        android:textStyle="bold"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtScheduleStartDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_toStartOf="@id/txtWave"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtWave"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_marginStart="4dp"
+        android:layout_marginEnd="4dp"
+        android:layout_toStartOf="@id/txtScheduleEndDate"
+        android:text="~"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtScheduleEndDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentEnd="true"
+        android:layout_centerVertical="true"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(date 1619847664000)
+++ app/src/main/res/values/strings.xml	(date 1619847664000)
@@ -0,0 +1,26 @@
+<resources>
+    <string name="app_name">ScheduleApp</string>
+    <!-- TODO: Remove or change this placeholder text -->
+    <string name="hello_blank_fragment">Hello blank fragment</string>
+    <string name="saving_days">SAVING DAYS</string>
+    <string name="schedule">일정</string>
+    <string name="food">음식</string>
+    <string name="product">소모품</string>
+    <string name="title_activity_add_schedule">AddScheduleActivity</string>
+    <!--
+    This string is used for square devices and overridden by hello_world in
+    values-round/strings.xml for round devices.
+    -->
+    <string name="hello_world">Hello Square World!</string>
+    <string name="title_activity_add_product">AddProductActivity</string>
+    <string name="cancel">취소</string>
+    <string name="confirm">확인</string>
+    <string name="schedule_title">일정 제목</string>
+    <string name="start_date">시작 날짜</string>
+    <string name="end_date">종료 날짜</string>
+    <string name="notification">알림</string>
+    <string name="please_add_new_item">새로운 항목을 추가해주세요</string>
+    <string name="product_title">제목</string>
+    <string name="open_date">개봉시기</string>
+    <string name="due_date">소비기한</string>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/themes.xml	(date 1619836374000)
+++ app/src/main/res/values/themes.xml	(date 1619836374000)
@@ -0,0 +1,16 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+    <style name="Theme.ScheduleApp" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <!-- Primary brand color. -->
+        <item name="colorPrimary">@color/gray</item>
+        <item name="colorPrimaryVariant">@color/purple_700</item>
+        <item name="colorOnPrimary">@color/white</item>
+        <!-- Secondary brand color. -->
+        <item name="colorSecondary">@color/gray</item>
+        <item name="colorSecondaryVariant">@color/gray</item>
+        <item name="colorOnSecondary">@color/black</item>
+        <!-- Status bar color. -->
+        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
+        <!-- Customize your theme here. -->
+    </style>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(date 1619836298000)
+++ app/src/main/res/values/colors.xml	(date 1619836298000)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="purple_200">#FFBB86FC</color>
+    <color name="purple_500">#FF6200EE</color>
+    <color name="purple_700">#FF3700B3</color>
+    <color name="teal_200">#FF03DAC5</color>
+    <color name="teal_700">#FF018786</color>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+
+    <color name="green">#7C7</color>
+    <color name="gray">#333</color>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(date 1619836536000)
+++ app/src/main/res/values/dimens.xml	(date 1619836536000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!--
+    Because the window insets on round devices are larger than 15dp, this padding only applies
+    to square screens.
+    -->
+    <dimen name="box_inset_layout_padding">0dp</dimen>
+
+    <!--
+    This padding applies to both square and round screens. The total padding between the buttons
+    and the window insets is box_inset_layout_padding (above variable) on square screens and
+    inner_frame_layout_padding (below variable) on round screens.
+    -->
+    <dimen name="inner_frame_layout_padding">5dp</dimen>
+</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/calendar_cell.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/calendar_cell.xml	(date 1619835072000)
+++ app/src/main/res/drawable/calendar_cell.xml	(date 1619835072000)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <stroke
+        android:width="1dp"
+        android:color="#DDD" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_check.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_check.xml	(date 1619836970000)
+++ app/src/main/res/drawable/ic_check.xml	(date 1619836970000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M9,16.17L4.83,12l-1.42,1.41L9,19 21,7l-1.41,-1.41z"/>
+</vector>
Index: app/src/main/res/drawable/ic_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_left.xml	(date 1619793466000)
+++ app/src/main/res/drawable/ic_left.xml	(date 1619793466000)
@@ -0,0 +1,11 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal"
+    android:autoMirrored="true">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M15.41,16.59L10.83,12l4.58,-4.59L14,6l-6,6 6,6 1.41,-1.41z"/>
+</vector>
Index: app/src/main/res/drawable/calendar_header_cell.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/calendar_header_cell.xml	(date 1619853956000)
+++ app/src/main/res/drawable/calendar_header_cell.xml	(date 1619853956000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <stroke
+        android:width="1dp"
+        android:color="#DDD" />
+    <solid android:color="#EEE" />
+    <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+
+</shape>
\ No newline at end of file
Index: app/app/src/main/res/layout/item_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/layout/item_product.xml	(date 1619850312000)
+++ app/app/src/main/res/layout/item_product.xml	(date 1619850312000)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginBottom="10dp">
+
+    <TextView
+        android:id="@+id/txtProductTitle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="TS"
+        android:textStyle="bold"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtDivider"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="8dp"
+        android:layout_marginEnd="8dp"
+        android:layout_toEndOf="@id/txtProductTitle"
+        android:text="|"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtProductType"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_toEndOf="@id/txtDivider"
+        android:text="샴푸"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtProductOpenDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_toStartOf="@id/txtWave"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtWave"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_marginStart="4dp"
+        android:layout_marginEnd="4dp"
+        android:layout_toStartOf="@id/txtProductDueDate"
+        android:text="~"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtProductDueDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentEnd="true"
+        android:layout_centerVertical="true"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/layout/activity_main.xml	(date 1619850524000)
+++ app/app/src/main/res/layout/activity_main.xml	(date 1619850524000)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".MainActivity">
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        tools:ignore="UselessParent">
+
+        <FrameLayout
+            android:id="@+id/frag_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+
+    </ScrollView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/calendar_cell_highlighted.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/calendar_cell_highlighted.xml	(date 1619855906000)
+++ app/src/main/res/drawable/calendar_cell_highlighted.xml	(date 1619855906000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <stroke
+        android:width="1dp"
+        android:color="#DDD" />
+    <solid android:color="#33AACCFF" />
+    <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_close.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_close.xml	(date 1619836882000)
+++ app/src/main/res/drawable/ic_close.xml	(date 1619836882000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z"/>
+</vector>
Index: app/app/src/main/res/layout/fragment_calendar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/layout/fragment_calendar.xml	(date 1619853360000)
+++ app/app/src/main/res/layout/fragment_calendar.xml	(date 1619853360000)
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".CalendarFragment">
+
+    <!-- 헤더 -->
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="10dp">
+
+        <ImageButton
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentStart="true"
+            android:layout_marginStart="10dp"
+            android:background="@drawable/ic_person"
+            android:contentDescription="@string/app_name" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerHorizontal="true"
+            android:layout_centerVertical="true"
+            android:text="@string/saving_days"
+            android:textColor="@color/gray"
+            android:textSize="22sp"
+            android:textStyle="bold" />
+
+        <ImageButton
+            android:id="@+id/ibtnAdd"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentEnd="true"
+            android:layout_marginEnd="10dp"
+            android:background="@drawable/ic_add"
+            android:backgroundTint="@color/green"
+            android:contentDescription="@string/app_name" />
+
+    </RelativeLayout>
+    <!-- 끝 : 헤더 -->
+
+    <!-- 가로선 -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:layout_marginBottom="10dp"
+        android:background="#DDD" />
+
+    <!-- 달 변경 레이아웃 -->
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:layout_marginBottom="4dp"
+        android:orientation="horizontal">
+
+        <ImageButton
+            android:id="@+id/ibtnPrevMonth"
+            android:layout_width="32dp"
+            android:layout_height="32dp"
+            android:background="@drawable/ic_left"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/app_name" />
+
+        <TextView
+            android:id="@+id/txtSelectedMonth"
+            android:layout_width="180dp"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="10dp"
+            android:layout_marginEnd="10dp"
+            android:gravity="center_horizontal"
+            android:text="March 2021"
+            android:textColor="@color/gray"
+            android:textSize="20sp"
+            android:textStyle="bold"
+            tools:ignore="HardcodedText" />
+
+        <ImageButton
+            android:id="@+id/ibtnNextMonth"
+            android:layout_width="32dp"
+            android:layout_height="32dp"
+            android:background="@drawable/ic_right"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/app_name" />
+
+    </LinearLayout>
+    <!-- 끝 : 달 변경 레이아웃 -->
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <include
+            android:id="@+id/calendar_grid"
+            layout="@layout/calendar_grid"
+            android:layout_width="match_parent"
+            android:layout_height="280dp"
+            android:layout_marginStart="20dp"
+            android:layout_marginTop="58dp"
+            android:layout_marginEnd="20dp" />
+
+        <!-- 달력 레이아웃 -->
+        <CalendarView
+            android:id="@+id/calendar"
+            android:layout_width="match_parent"
+            android:layout_height="340dp" />
+
+        <!-- 버튼 레이아웃 -->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="60dp"
+            android:background="@color/white"
+            android:orientation="horizontal">
+
+            <!-- 일정 버튼 -->
+            <Button
+                android:id="@+id/btnSchedule"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="30dp"
+                android:layout_marginEnd="16dp"
+                android:layout_weight="1"
+                android:backgroundTint="@color/green"
+                android:text="@string/schedule"
+                android:textColor="@color/white"
+                tools:ignore="ButtonStyle" />
+
+            <!-- 음식 버튼 -->
+            <Button
+                android:id="@+id/btnFood"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="16dp"
+                android:layout_weight="1"
+                android:backgroundTint="@color/white"
+                android:text="@string/food"
+                android:textColor="@color/gray"
+                tools:ignore="ButtonStyle" />
+
+            <!-- 소모품 버튼 -->
+            <Button
+                android:id="@+id/btnProduct"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="30dp"
+                android:layout_weight="1"
+                android:backgroundTint="@color/white"
+                android:text="@string/product"
+                android:textColor="@color/gray"
+                tools:ignore="ButtonStyle" />
+
+        </LinearLayout>
+        <!-- 끝 : 버튼 레이아웃 -->
+
+    </FrameLayout>
+
+    <androidx.cardview.widget.CardView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="20dp"
+        app:cardBackgroundColor="#EEE"
+        app:cardCornerRadius="8dp">
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <TextView
+                android:id="@+id/txtNoItems"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:padding="16dp"
+                android:text="@string/please_add_new_item" />
+
+            <!-- 리사이클러뷰 -->
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/recycler"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:paddingStart="16dp"
+                android:paddingTop="16dp"
+                android:paddingEnd="16dp"
+                android:paddingBottom="6dp" />
+
+        </FrameLayout>
+
+    </androidx.cardview.widget.CardView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/app/src/main/res/layout/item_schedule.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/layout/item_schedule.xml	(date 1619850312000)
+++ app/app/src/main/res/layout/item_schedule.xml	(date 1619850312000)
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginBottom="10dp">
+
+    <TextView
+        android:id="@+id/txtScheduleTitle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="등산하기"
+        android:textStyle="bold"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtScheduleStartDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_toStartOf="@id/txtWave"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtWave"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:layout_marginStart="4dp"
+        android:layout_marginEnd="4dp"
+        android:layout_toStartOf="@id/txtScheduleEndDate"
+        android:text="~"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+    <TextView
+        android:id="@+id/txtScheduleEndDate"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentEnd="true"
+        android:layout_centerVertical="true"
+        android:text="2021년 5월 1일"
+        android:textSize="13sp"
+        tools:ignore="HardcodedText" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/app/src/main/res/layout/activity_add_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/layout/activity_add_product.xml	(date 1619847664000)
+++ app/app/src/main/res/layout/activity_add_product.xml	(date 1619847664000)
@@ -0,0 +1,117 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="10dp"
+    tools:context=".AddProductActivity">
+
+    <!-- 버튼 레이아웃 -->
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="10dp">
+
+        <!-- 취소 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnCancel"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentStart="true"
+            android:background="@drawable/ic_close"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/cancel" />
+
+        <!-- 확인 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnConfirm"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentEnd="true"
+            android:background="@drawable/ic_check"
+            android:backgroundTint="@color/green"
+            android:contentDescription="@string/confirm" />
+
+    </RelativeLayout>
+
+    <!-- EditText: 소모품 제목 -->
+    <EditText
+        android:id="@+id/editProductTitle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="20dp"
+        android:autofillHints=""
+        android:hint="@string/product_title"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+    <!-- 제품군 스피너 -->
+    <Spinner
+        android:id="@+id/spinnerProductType"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="50dp" />
+
+    <!-- 기한/알림 레이아웃 -->
+    <GridLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:columnCount="2">
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/open_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+
+        <Button
+            android:id="@+id/btnOpenDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/due_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnDueDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/notification"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnNotification"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="알림 없음"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+    </GridLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_right.xml	(date 1619793490000)
+++ app/src/main/res/drawable/ic_right.xml	(date 1619793490000)
@@ -0,0 +1,11 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal"
+    android:autoMirrored="true">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M8.59,16.59L13.17,12 8.59,7.41 10,6l6,6 -6,6 -1.41,-1.41z"/>
+</vector>
Index: app/app/src/main/res/layout/activity_add_schedule.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/layout/activity_add_schedule.xml	(date 1619847664000)
+++ app/app/src/main/res/layout/activity_add_schedule.xml	(date 1619847664000)
@@ -0,0 +1,110 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="10dp"
+    tools:context=".AddScheduleActivity">
+
+    <!-- 버튼 레이아웃 -->
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="10dp">
+
+        <!-- 취소 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnCancel"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentStart="true"
+            android:background="@drawable/ic_close"
+            android:backgroundTint="@color/gray"
+            android:contentDescription="@string/cancel" />
+
+        <!-- 확인 버튼 -->
+        <ImageButton
+            android:id="@+id/ibtnConfirm"
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_alignParentEnd="true"
+            android:background="@drawable/ic_check"
+            android:backgroundTint="@color/green"
+            android:contentDescription="@string/confirm" />
+
+    </RelativeLayout>
+
+    <!-- EditText: 일정 제목 -->
+    <EditText
+        android:id="@+id/editScheduleTitle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="20dp"
+        android:autofillHints=""
+        android:hint="@string/schedule_title"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+    <!-- 날짜/알림 레이아웃 -->
+    <GridLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:columnCount="2">
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/start_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+
+        <Button
+            android:id="@+id/btnStartDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/end_date"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnEndDate"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="2021년 3월 26일"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+        <TextView
+            android:layout_width="140dp"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="@string/notification"
+            android:textColor="@color/gray"
+            android:textSize="18sp" />
+
+        <Button
+            android:id="@+id/btnNotification"
+            android:layout_width="160dp"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/white"
+            android:text="알림 없음"
+            android:textColor="@color/gray"
+            tools:ignore="HardcodedText" />
+
+    </GridLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/app/src/main/res/layout/calendar_grid.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/layout/calendar_grid.xml	(date 1619845766000)
+++ app/app/src/main/res/layout/calendar_grid.xml	(date 1619845766000)
@@ -0,0 +1,356 @@
+<?xml version="1.0" encoding="utf-8"?>
+<GridLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_marginTop="60dp"
+    android:layout_width="match_parent"
+    android:layout_height="280dp"
+    android:layout_marginStart="20dp"
+    android:layout_marginEnd="20dp"
+    android:columnCount="7"
+    android:rowCount="7">
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_header_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+    <View
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_columnWeight="1"
+        android:layout_rowWeight="1"
+        android:background="@drawable/calendar_cell" />
+
+</GridLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_person.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_person.xml	(date 1619792702000)
+++ app/src/main/res/drawable/ic_person.xml	(date 1619792702000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M12,2c-4.97,0 -9,4.03 -9,9 0,4.17 2.84,7.67 6.69,8.69L12,22l2.31,-2.31C18.16,18.67 21,15.17 21,11c0,-4.97 -4.03,-9 -9,-9zM12,4c1.66,0 3,1.34 3,3s-1.34,3 -3,3 -3,-1.34 -3,-3 1.34,-3 3,-3zM12,18.3c-2.5,0 -4.71,-1.28 -6,-3.22 0.03,-1.99 4,-3.08 6,-3.08 1.99,0 5.97,1.09 6,3.08 -1.29,1.94 -3.5,3.22 -6,3.22z"/>
+</vector>
Index: app/app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/values/strings.xml	(date 1619847664000)
+++ app/app/src/main/res/values/strings.xml	(date 1619847664000)
@@ -0,0 +1,26 @@
+<resources>
+    <string name="app_name">ScheduleApp</string>
+    <!-- TODO: Remove or change this placeholder text -->
+    <string name="hello_blank_fragment">Hello blank fragment</string>
+    <string name="saving_days">SAVING DAYS</string>
+    <string name="schedule">일정</string>
+    <string name="food">음식</string>
+    <string name="product">소모품</string>
+    <string name="title_activity_add_schedule">AddScheduleActivity</string>
+    <!--
+    This string is used for square devices and overridden by hello_world in
+    values-round/strings.xml for round devices.
+    -->
+    <string name="hello_world">Hello Square World!</string>
+    <string name="title_activity_add_product">AddProductActivity</string>
+    <string name="cancel">취소</string>
+    <string name="confirm">확인</string>
+    <string name="schedule_title">일정 제목</string>
+    <string name="start_date">시작 날짜</string>
+    <string name="end_date">종료 날짜</string>
+    <string name="notification">알림</string>
+    <string name="please_add_new_item">새로운 항목을 추가해주세요</string>
+    <string name="product_title">제목</string>
+    <string name="open_date">개봉시기</string>
+    <string name="due_date">소비기한</string>
+</resources>
\ No newline at end of file
Index: app/app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/values/themes.xml	(date 1619836374000)
+++ app/app/src/main/res/values/themes.xml	(date 1619836374000)
@@ -0,0 +1,16 @@
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <!-- Base application theme. -->
+    <style name="Theme.ScheduleApp" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <!-- Primary brand color. -->
+        <item name="colorPrimary">@color/gray</item>
+        <item name="colorPrimaryVariant">@color/purple_700</item>
+        <item name="colorOnPrimary">@color/white</item>
+        <!-- Secondary brand color. -->
+        <item name="colorSecondary">@color/gray</item>
+        <item name="colorSecondaryVariant">@color/gray</item>
+        <item name="colorOnSecondary">@color/black</item>
+        <!-- Status bar color. -->
+        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
+        <!-- Customize your theme here. -->
+    </style>
+</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_add.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_add.xml	(date 1619792728000)
+++ app/src/main/res/drawable/ic_add.xml	(date 1619792728000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM17,13h-4v4h-2v-4L7,13v-2h4L11,7h2v4h4v2z"/>
+</vector>
Index: app/app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/values/colors.xml	(date 1619836298000)
+++ app/app/src/main/res/values/colors.xml	(date 1619836298000)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="purple_200">#FFBB86FC</color>
+    <color name="purple_500">#FF6200EE</color>
+    <color name="purple_700">#FF3700B3</color>
+    <color name="teal_200">#FF03DAC5</color>
+    <color name="teal_700">#FF018786</color>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+
+    <color name="green">#7C7</color>
+    <color name="gray">#333</color>
+</resources>
\ No newline at end of file
Index: app/app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/values/dimens.xml	(date 1619836536000)
+++ app/app/src/main/res/values/dimens.xml	(date 1619836536000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!--
+    Because the window insets on round devices are larger than 15dp, this padding only applies
+    to square screens.
+    -->
+    <dimen name="box_inset_layout_padding">0dp</dimen>
+
+    <!--
+    This padding applies to both square and round screens. The total padding between the buttons
+    and the window insets is box_inset_layout_padding (above variable) on square screens and
+    inner_frame_layout_padding (below variable) on round screens.
+    -->
+    <dimen name="inner_frame_layout_padding">5dp</dimen>
+</resources>
\ No newline at end of file
Index: app/app/src/main/res/drawable/calendar_cell.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/calendar_cell.xml	(date 1619835072000)
+++ app/app/src/main/res/drawable/calendar_cell.xml	(date 1619835072000)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <stroke
+        android:width="1dp"
+        android:color="#DDD" />
+
+</shape>
\ No newline at end of file
Index: app/app/src/main/res/drawable/ic_person.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/ic_person.xml	(date 1619792702000)
+++ app/app/src/main/res/drawable/ic_person.xml	(date 1619792702000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M12,2c-4.97,0 -9,4.03 -9,9 0,4.17 2.84,7.67 6.69,8.69L12,22l2.31,-2.31C18.16,18.67 21,15.17 21,11c0,-4.97 -4.03,-9 -9,-9zM12,4c1.66,0 3,1.34 3,3s-1.34,3 -3,3 -3,-1.34 -3,-3 1.34,-3 3,-3zM12,18.3c-2.5,0 -4.71,-1.28 -6,-3.22 0.03,-1.99 4,-3.08 6,-3.08 1.99,0 5.97,1.09 6,3.08 -1.29,1.94 -3.5,3.22 -6,3.22z"/>
+</vector>
Index: app/app/src/main/res/drawable/ic_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/ic_right.xml	(date 1619793490000)
+++ app/app/src/main/res/drawable/ic_right.xml	(date 1619793490000)
@@ -0,0 +1,11 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal"
+    android:autoMirrored="true">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M8.59,16.59L13.17,12 8.59,7.41 10,6l6,6 -6,6 -1.41,-1.41z"/>
+</vector>
Index: app/app/src/main/res/drawable/ic_close.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/ic_close.xml	(date 1619836882000)
+++ app/app/src/main/res/drawable/ic_close.xml	(date 1619836882000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z"/>
+</vector>
Index: app/app/src/main/res/drawable/ic_add.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/ic_add.xml	(date 1619792728000)
+++ app/app/src/main/res/drawable/ic_add.xml	(date 1619792728000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM17,13h-4v4h-2v-4L7,13v-2h4L11,7h2v4h4v2z"/>
+</vector>
Index: app/app/src/main/res/drawable/calendar_header_cell.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/calendar_header_cell.xml	(date 1619853956000)
+++ app/app/src/main/res/drawable/calendar_header_cell.xml	(date 1619853956000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <stroke
+        android:width="1dp"
+        android:color="#DDD" />
+    <solid android:color="#EEE" />
+    <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/values-round/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-round/strings.xml	(date 1619836536000)
+++ app/src/main/res/values-round/strings.xml	(date 1619836536000)
@@ -0,0 +1,3 @@
+<resources>
+    <string name="hello_world">Hello Round World!</string>
+</resources>
\ No newline at end of file
Index: app/app/src/main/res/drawable/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/ic_launcher_background.xml	(date 1619792224000)
+++ app/app/src/main/res/drawable/ic_launcher_background.xml	(date 1619792224000)
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillColor="#3DDC84"
+        android:pathData="M0,0h108v108h-108z" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M9,0L9,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,0L19,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,0L29,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,0L39,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,0L49,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,0L59,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,0L69,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,0L79,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M89,0L89,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M99,0L99,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,9L108,9"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,19L108,19"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,29L108,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,39L108,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,49L108,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,59L108,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,69L108,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,79L108,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,89L108,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,99L108,99"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,29L89,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,39L89,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,49L89,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,59L89,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,69L89,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,79L89,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,19L29,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,19L39,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,19L49,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,19L59,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,19L69,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,19L79,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+</vector>
Index: app/app/src/main/res/drawable/ic_check.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/ic_check.xml	(date 1619836970000)
+++ app/app/src/main/res/drawable/ic_check.xml	(date 1619836970000)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M9,16.17L4.83,12l-1.42,1.41L9,19 21,7l-1.41,-1.41z"/>
+</vector>
Index: app/app/src/main/res/drawable/ic_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/ic_left.xml	(date 1619793466000)
+++ app/app/src/main/res/drawable/ic_left.xml	(date 1619793466000)
@@ -0,0 +1,11 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal"
+    android:autoMirrored="true">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M15.41,16.59L10.83,12l4.58,-4.59L14,6l-6,6 6,6 1.41,-1.41z"/>
+</vector>
Index: app/app/src/main/res/drawable/calendar_cell_highlighted.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable/calendar_cell_highlighted.xml	(date 1619855906000)
+++ app/app/src/main/res/drawable/calendar_cell_highlighted.xml	(date 1619855906000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <stroke
+        android:width="1dp"
+        android:color="#DDD" />
+    <solid android:color="#33AACCFF" />
+    <padding
+        android:bottom="1dp"
+        android:left="1dp"
+        android:right="1dp"
+        android:top="1dp" />
+
+</shape>
\ No newline at end of file
Index: app/app/src/main/res/drawable-v24/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(date 1619792224000)
+++ app/app/src/main/res/drawable-v24/ic_launcher_foreground.xml	(date 1619792224000)
@@ -0,0 +1,30 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+        <aapt:attr name="android:fillColor">
+            <gradient
+                android:endX="85.84757"
+                android:endY="92.4963"
+                android:startX="42.9492"
+                android:startY="49.59793"
+                android:type="linear">
+                <item
+                    android:color="#44000000"
+                    android:offset="0.0" />
+                <item
+                    android:color="#00000000"
+                    android:offset="1.0" />
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000" />
+</vector>
\ No newline at end of file
Index: app/src/main/java/com/example/savingdays/ProductAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/savingdays/ProductAdapter.java	(date 1620305940992)
+++ app/src/main/java/com/example/savingdays/ProductAdapter.java	(date 1620305940992)
@@ -0,0 +1,105 @@
+package com.example.savingdays;
+
+
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.savingdays.R;
+import com.example.savingdays.Product;
+
+import java.util.List;
+import java.util.Locale;
+
+public class ProductAdapter extends RecyclerView.Adapter<ProductAdapter.ViewHolder> {
+
+    private final List<Product> list;
+    private OnItemClickListener onItemClickListener;
+
+    public ProductAdapter(List<Product> list) {
+        this.list = list;
+    }
+
+    public void setOnItemClickListener(OnItemClickListener listener) {
+        this.onItemClickListener = listener;
+    }
+
+    public static class ViewHolder extends RecyclerView.ViewHolder {
+
+        private final TextView txtTitle;
+        private final TextView txtType;
+        private final TextView txtOpenDate;
+        private final TextView txtDueDate;
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+
+            txtTitle = itemView.findViewById(R.id.txtProductTitle);
+            txtType = itemView.findViewById(R.id.txtProductType);
+            txtOpenDate = itemView.findViewById(R.id.txtProductOpenDate);
+            txtDueDate = itemView.findViewById(R.id.txtProductDueDate);
+        }
+
+        public void bind(Product model, OnItemClickListener listener) {
+
+            String strOpenDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getOpenDate().getYear(),
+                    model.getOpenDate().getMonthValue(),
+                    model.getOpenDate().getDayOfMonth());
+
+            String strDueDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getDueDate().getYear(),
+                    model.getDueDate().getMonthValue(),
+                    model.getDueDate().getDayOfMonth());
+
+            txtTitle.setText(model.getTitle());
+            txtType.setText(Product.getTypeName(model.getType()));
+            txtOpenDate.setText(strOpenDate);
+            txtDueDate.setText(strDueDate);
+
+            if (listener != null) {
+                itemView.setOnClickListener(v -> {
+                    int position = getAdapterPosition();
+                    if (position != RecyclerView.NO_POSITION) {
+                        listener.onItemClick(position);
+                    }
+                });
+            }
+        }
+    }
+
+    @NonNull
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+
+        View v = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_product, parent, false);
+
+        return new ViewHolder(v);
+    }
+
+
+    @Override
+    public void onBindViewHolder(ViewHolder holder, int position) {
+
+        Product item = list.get(position);
+        holder.bind(item, onItemClickListener);
+    }
+
+    @Override
+    public int getItemCount() {
+        return list.size();
+    }
+
+    public interface OnItemClickListener {
+        void onItemClick(int position);
+    }
+
+}
\ No newline at end of file
Index: app/app/src/main/res/values-round/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/values-round/strings.xml	(date 1619836536000)
+++ app/app/src/main/res/values-round/strings.xml	(date 1619836536000)
@@ -0,0 +1,3 @@
+<resources>
+    <string name="hello_world">Hello Round World!</string>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/example/savingdays/Schedule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/savingdays/Schedule.java	(date 1620305941008)
+++ app/src/main/java/com/example/savingdays/Schedule.java	(date 1620305941008)
@@ -0,0 +1,42 @@
+package com.example.savingdays;
+
+import java.time.LocalDate;
+
+public class Schedule {
+
+    private final int id;
+    private final String title;
+    private final LocalDate startDate;
+    private final LocalDate endDate;
+
+    public Schedule(int id, String title, LocalDate startDate, LocalDate endDate) {
+        this.id = id;
+        this.title = title;
+        this.startDate = startDate;
+        this.endDate = endDate;
+    }
+
+    public Schedule(String title, LocalDate startDate, LocalDate endDate) {
+        this.id = -1;
+        this.title = title;
+        this.startDate = startDate;
+        this.endDate = endDate;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public LocalDate getStartDate() {
+        return startDate;
+    }
+
+    public LocalDate getEndDate() {
+        return endDate;
+    }
+
+}
Index: app/src/main/java/com/example/savingdays/AddProductActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/savingdays/AddProductActivity.java	(date 1620304702547)
+++ app/src/main/java/com/example/savingdays/AddProductActivity.java	(date 1620304702547)
@@ -0,0 +1,215 @@
+package com.example.savingdays;
+
+
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.app.DatePickerDialog;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.Spinner;
+import android.widget.Toast;
+
+import com.example.savingdays.SQLiteHelper;
+import com.example.savingdays.Product;
+
+import java.time.LocalDate;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Locale;
+
+public class AddProductActivity extends AppCompatActivity implements View.OnClickListener {
+
+    public static final String EXTRA_PRODUCT_ID = "com.holy.scheduleapp.product_id";
+    public static final String EXTRA_SELECTED_DATE = "com.holy.scheduleapp.selected_date";
+
+    private int mProductId;                 // 제품 ID (-1 이면 추가모드, 아니면 수정모드)
+
+    private Button mOpenDateButton;         // 날짜 버튼
+    private Button mDueDateButton;
+    private EditText mProductTitleEdit;     // 제품 제목 에딧텍스트
+    private Spinner mProductTypeSpinner;    // 제품군 스피너
+
+    private LocalDate mOpenDate;            // 개봉 날짜
+    private LocalDate mDueDate;             // 소비기한 날짜
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_add_product);
+
+        // 전달된 제품 ID 를 확인한다
+        mProductId = getIntent().getIntExtra(EXTRA_PRODUCT_ID, -1);
+        Product product = null;
+        if (mProductId != -1) {
+            product = SQLiteHelper.getInstance(this).getProduct(mProductId);
+        }
+
+        mProductTitleEdit = findViewById(R.id.editProductTitle);
+        if (product != null) {
+            mProductTitleEdit.setText(product.getTitle());
+        }
+
+        // 버튼에 리스너를 설정한다
+        ImageButton cancelIButton = findViewById(R.id.ibtnCancel);
+        ImageButton confirmIButton = findViewById(R.id.ibtnConfirm);
+        cancelIButton.setOnClickListener(this);
+        confirmIButton.setOnClickListener(this);
+
+        mOpenDateButton = findViewById(R.id.btnOpenDate);
+        mDueDateButton = findViewById(R.id.btnDueDate);
+        mOpenDateButton.setOnClickListener(this);
+        mDueDateButton.setOnClickListener(this);
+
+        // 개봉, 소비기한 날짜 초기화
+        if (product != null) {
+            mOpenDate = product.getOpenDate();
+            mDueDate = product.getDueDate();
+        } else {
+            String strSelectedDate = getIntent().getStringExtra(EXTRA_SELECTED_DATE);
+            mOpenDate = LocalDate.parse(strSelectedDate);
+            mDueDate = LocalDate.parse(strSelectedDate);
+        }
+        updateDateButtons();
+
+        // 제품군 스피너 초기화
+        mProductTypeSpinner = findViewById(R.id.spinnerProductType);
+        List<String> typeNameList = new ArrayList<>();
+        int[] types = Product.getTypes();
+        for (int type : types) {
+            String typeName = Product.getTypeName(type);
+            typeNameList.add(typeName);
+        }
+        mProductTypeSpinner.setAdapter(new ArrayAdapter<>(
+                this, android.R.layout.simple_spinner_item,
+                typeNameList
+        ));
+        if (product != null) {
+            int sel = Spinner.INVALID_POSITION;
+            for (int i = 0; i < types.length; i++) {
+                if (types[i] == product.getType()) {
+                    sel = i;
+                    break;
+                }
+            }
+            mProductTypeSpinner.setSelection(sel);
+        }
+    }
+
+    // 개봉, 소비기한 날짜 버튼 업데이트
+
+    private void updateDateButtons() {
+
+        String strOpenDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mOpenDate.getYear(), mOpenDate.getMonthValue(), mOpenDate.getDayOfMonth());
+
+        String strDueDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mDueDate.getYear(), mDueDate.getMonthValue(), mDueDate.getDayOfMonth());
+
+        mOpenDateButton.setText(strOpenDate);
+        mDueDateButton.setText(strDueDate);
+    }
+
+    // 버튼 클릭을 처리한다
+
+    @Override
+    public void onClick(View v) {
+
+        int id = v.getId();
+
+        if (id == R.id.ibtnCancel) {
+            // 취소 버튼 : 액티비티 종료
+            setResult(RESULT_CANCELED);
+            finish();
+        } else if (id == R.id.ibtnConfirm) {
+            // 확인 버튼 : 제품 추가 후 액티비티 종료
+            if (addOrUpdateProduct()) {
+                setResult(RESULT_OK);
+                finish();
+            }
+        } else if (id == R.id.btnOpenDate) {
+            // 개봉 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(true);
+        } else if (id == R.id.btnDueDate) {
+            // 소비기한 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(false);
+        }
+    }
+
+    // DB 에 제품을 추가한다
+
+    private boolean addOrUpdateProduct() {
+
+        // 일정 제목을 확인한다
+        String productTitle = mProductTitleEdit.getText().toString().trim();
+
+        if (productTitle.isEmpty()) {
+            Toast.makeText(this, "제목을 입력해주세요", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+        // 제품군을 확인한다
+        int typePosition = mProductTypeSpinner.getSelectedItemPosition();
+        if (typePosition == Spinner.INVALID_POSITION) {
+            Toast.makeText(this, "제품군을 선택해주세요.", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+        int type = Product.getTypes()[typePosition];
+
+        // DB 에 추가 및 업데이트
+        Product product;
+        if (mProductId == -1) {
+            product = new Product(productTitle, type, mOpenDate, mDueDate);
+            SQLiteHelper.getInstance(this).addProduct(product);
+        } else {
+            product = new Product(mProductId, productTitle, type, mOpenDate, mDueDate);
+            SQLiteHelper.getInstance(this).updateProduct(product);
+        }
+
+        return true;
+    }
+
+    // 개봉/소비기한 날짜 선택 대화상자를 띄운다
+
+    private void showDateDialog(boolean openOrDue) {
+
+        LocalDate initialDate = openOrDue ? mOpenDate : mDueDate;
+        int initialYear = initialDate.getYear();
+        int initialMonth = initialDate.getMonthValue() - 1;
+        int initialDayOfMonth = initialDate.getDayOfMonth();
+
+        new DatePickerDialog(
+                this,
+                (view, year, month, dayOfMonth) -> {
+                    // 날짜 선택 시 개봉/소비기한 날짜를 변경한다
+                    LocalDate date = LocalDate.of(year, month + 1, dayOfMonth);
+
+                    if (openOrDue) {
+                        if (!date.isAfter(mDueDate)) {
+                            mOpenDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "앞선 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    } else {
+                        if (!date.isBefore(mOpenDate)) {
+                            mDueDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "뒤의 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                },
+                initialYear, initialMonth, initialDayOfMonth
+        ).show();
+    }
+
+}
Index: app/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(date 1619792222000)
+++ app/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(date 1619792222000)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
Index: app/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(date 1619792224000)
+++ app/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(date 1619792224000)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/example/savingdays/SQLiteHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/savingdays/SQLiteHelper.java	(date 1620305940961)
+++ app/src/main/java/com/example/savingdays/SQLiteHelper.java	(date 1620305940961)
@@ -0,0 +1,487 @@
+package com.example.savingdays;
+
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+import androidx.annotation.Nullable;
+
+import com.example.savingdays.Product;
+import com.example.savingdays.Schedule;
+
+import java.time.LocalDate;
+import java.util.ArrayList;
+import java.util.List;
+
+public class SQLiteHelper extends SQLiteOpenHelper {
+
+    // 데이터베이스 이름
+    private static final String DATABASE_NAME = "database";
+    // 현재 버전
+    private static final int DATABASE_VERSION = 2;
+
+    // 일정 테이블의 정보
+    public static final String TABLE_SCHEDULES = "schedules";
+    public static final String COLUMN_SCHEDULE_ID = "id";
+    public static final String COLUMN_SCHEDULE_TITLE = "title";
+    public static final String COLUMN_SCHEDULE_START_DATE = "startDate";
+    public static final String COLUMN_SCHEDULE_END_DATE = "endDate";
+
+    // 제품 테이블의 정보
+    public static final String TABLE_PRODUCTS = "products";
+    public static final String COLUMN_PRODUCT_ID = "id";
+    public static final String COLUMN_PRODUCT_TITLE = "title";
+    public static final String COLUMN_PRODUCT_TYPE = "type";
+    public static final String COLUMN_PRODUCT_OPEN_DATE = "openDate";
+    public static final String COLUMN_PRODUCT_DUE_DATE = "dueDate";
+
+    // 데이터베이스 헬퍼 객체
+    private static SQLiteHelper instance;
+
+    // 데이터베이스 헬퍼 객체 구하기.
+    public static synchronized SQLiteHelper getInstance(Context context) {
+        if (instance == null) {
+            instance = new SQLiteHelper(context.getApplicationContext());
+        }
+        return instance;
+    }
+
+    // 생성자
+    public SQLiteHelper(@Nullable Context context) {
+        super(context, DATABASE_NAME, null, DATABASE_VERSION);
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+
+        // 초기화 : 데이터베이스에 일정 테이블을 생성한다.
+        String CREATE_SCHEDULES_TABLE = "CREATE TABLE " + TABLE_SCHEDULES +
+                "(" +
+                COLUMN_SCHEDULE_ID + " INTEGER PRIMARY KEY, " +
+                COLUMN_SCHEDULE_TITLE + " TEXT NOT NULL, " +
+                COLUMN_SCHEDULE_START_DATE + " TEXT NOT NULL, " +
+                COLUMN_SCHEDULE_END_DATE + " TEXT NOT NULL" +
+                ")";
+        db.execSQL(CREATE_SCHEDULES_TABLE);
+
+        // 초기화 : 데이터베이스에 제품 테이블을 생성한다.
+        String CREATE_PRODUCTS_TABLE = "CREATE TABLE " + TABLE_PRODUCTS +
+                "(" +
+                COLUMN_PRODUCT_ID + " INTEGER PRIMARY KEY, " +
+                COLUMN_PRODUCT_TITLE + " TEXT NOT NULL, " +
+                COLUMN_PRODUCT_TYPE + " INTEGER NOT NULL, " +
+                COLUMN_PRODUCT_OPEN_DATE + " TEXT NOT NULL, " +
+                COLUMN_PRODUCT_DUE_DATE + " TEXT NOT NULL" +
+                ")";
+        db.execSQL(CREATE_PRODUCTS_TABLE);
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+
+        // 기존의 데이터베이스 버전이 현재와 다르면 테이블을 지우고 빈 테이블 다시 만들기.
+        if (oldVersion != newVersion) {
+            db.execSQL("DROP TABLE IF EXISTS " + TABLE_SCHEDULES);
+            db.execSQL("DROP TABLE IF EXISTS " + TABLE_PRODUCTS);
+            onCreate(db);
+        }
+    }
+
+    // 일정 추가
+
+    public void addSchedule(Schedule schedule) {
+
+        // 쓰기용 DB 를 연다.
+        SQLiteDatabase db = getWritableDatabase();
+
+        // DB 입력 시작
+        db.beginTransaction();
+        try {
+            // 정보를 모두 values 객체에 입력한다
+            ContentValues values = new ContentValues();
+            values.put(COLUMN_SCHEDULE_TITLE, schedule.getTitle());
+            values.put(COLUMN_SCHEDULE_START_DATE, schedule.getStartDate().toString());
+            values.put(COLUMN_SCHEDULE_END_DATE, schedule.getEndDate().toString());
+
+            // 데이터베이스에 values 를 입력한다.
+            db.insertOrThrow(TABLE_SCHEDULES, null, values);
+            db.setTransactionSuccessful();
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+    // 일정 조회
+
+    public Schedule getSchedule(int id) {
+
+        Schedule schedule = null;
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_SCHEDULES = "SELECT * FROM " + TABLE_SCHEDULES
+                + " WHERE " + COLUMN_SCHEDULE_ID + " = " + id;
+        Cursor cursor = db.rawQuery(SELECT_SCHEDULES, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+
+                // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                String title = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_TITLE));
+                String strStartDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_START_DATE));
+                String strEndDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_END_DATE));
+
+                // 정보로 객체를 만들어 리스트에 추가한다.
+                schedule = new Schedule(
+                        id, title,
+                        LocalDate.parse(strStartDate),
+                        LocalDate.parse(strEndDate));
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return schedule;
+    }
+
+    public List<Schedule> getScheduleByDate(LocalDate date) {
+
+        List<Schedule> scheduleList = new ArrayList<>();
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_SCHEDULES =
+                "SELECT * FROM " + TABLE_SCHEDULES
+                        + " WHERE " + COLUMN_SCHEDULE_START_DATE + " <= '" + date.toString() + "'"
+                        + " AND " + COLUMN_SCHEDULE_END_DATE + " >= '" + date.toString() + "'";
+        Cursor cursor = db.rawQuery(SELECT_SCHEDULES, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_SCHEDULE_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_TITLE));
+                    String strStartDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_START_DATE));
+                    String strEndDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_END_DATE));
+
+                    // 정보로 객체를 만들어 리스트에 추가한다.
+                    Schedule schedule = new Schedule(
+                            id, title,
+                            LocalDate.parse(strStartDate),
+                            LocalDate.parse(strEndDate));
+                    scheduleList.add(schedule);
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return scheduleList;
+    }
+
+    public List<Schedule> getScheduleByMonth(LocalDate date) {
+
+        List<Schedule> scheduleList = new ArrayList<>();
+
+        LocalDate nextMonth = date.plusMonths(1);
+        LocalDate prevMonth = date.minusMonths(1);
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_SCHEDULES =
+                "SELECT * FROM " + TABLE_SCHEDULES;
+        Cursor cursor = db.rawQuery(SELECT_SCHEDULES, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_SCHEDULE_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_TITLE));
+                    String strStartDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_START_DATE));
+                    String strEndDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_END_DATE));
+
+                    // 정보로 객체를 만들어 검사후 리스트에 추가한다.
+                    Schedule schedule = new Schedule(
+                            id, title,
+                            LocalDate.parse(strStartDate),
+                            LocalDate.parse(strEndDate));
+
+                    if (schedule.getStartDate().getMonthValue() == date.getMonthValue()
+                            || schedule.getEndDate().getMonthValue() == date.getMonthValue()) {
+                        scheduleList.add(schedule);
+                    }
+                    scheduleList.add(schedule);
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return scheduleList;
+    }
+
+    // 일정 업데이트
+
+    public void updateSchedule(Schedule schedule) {
+
+        // 쓰기용 DB 얻기
+        SQLiteDatabase db = this.getWritableDatabase();
+
+        ContentValues values = new ContentValues();
+        values.put(COLUMN_SCHEDULE_TITLE, schedule.getTitle());
+        values.put(COLUMN_SCHEDULE_START_DATE, schedule.getStartDate().toString());
+        values.put(COLUMN_SCHEDULE_END_DATE, schedule.getEndDate().toString());
+
+        db.update(TABLE_SCHEDULES, values, COLUMN_SCHEDULE_ID + " = ?",
+                new String[]{String.valueOf(schedule.getId())});
+    }
+
+    // 일정 삭제
+
+    public void deleteSchedule(int id) {
+
+        // 쓰기용 DB 열기
+        SQLiteDatabase db = getWritableDatabase();
+
+        db.beginTransaction();
+        try {
+            // 데이터베이스에서 주어진 id를 가진 정보를 삭제한다.
+            db.delete(TABLE_SCHEDULES,
+                    COLUMN_SCHEDULE_ID + "=?",
+                    new String[]{String.valueOf(id)});
+            db.setTransactionSuccessful();
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+
+
+    // 제품 추가
+
+    public void addProduct(Product product) {
+
+        // 쓰기용 DB 를 연다.
+        SQLiteDatabase db = getWritableDatabase();
+
+        // DB 입력 시작
+        db.beginTransaction();
+        try {
+            // 정보를 모두 values 객체에 입력한다
+            ContentValues values = new ContentValues();
+            values.put(COLUMN_PRODUCT_TITLE, product.getTitle());
+            values.put(COLUMN_PRODUCT_TYPE, product.getType());
+            values.put(COLUMN_PRODUCT_OPEN_DATE, product.getOpenDate().toString());
+            values.put(COLUMN_PRODUCT_DUE_DATE, product.getDueDate().toString());
+
+            // 데이터베이스에 values 를 입력한다.
+            db.insertOrThrow(TABLE_PRODUCTS, null, values);
+            db.setTransactionSuccessful();
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+    // 제품 조회
+
+    public Product getProduct(int id) {
+
+        Product product = null;
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_PRODUCTS = "SELECT * FROM " + TABLE_PRODUCTS
+                + " WHERE " + COLUMN_PRODUCT_ID + " = " + id;
+        Cursor cursor = db.rawQuery(SELECT_PRODUCTS, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+
+                // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                String title = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_TITLE));
+                int type = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_TYPE));
+                String strOpenDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_OPEN_DATE));
+                String strDueDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_DUE_DATE));
+
+                // 정보로 객체를 만들어 리스트에 추가한다.
+                product = new Product(
+                        id, title, type,
+                        LocalDate.parse(strOpenDate),
+                        LocalDate.parse(strDueDate));
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return product;
+    }
+
+    public List<Product> getProductByDate(LocalDate date) {
+
+        List<Product> productList = new ArrayList<>();
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_PRODUCTS =
+                "SELECT * FROM " + TABLE_PRODUCTS
+                        + " WHERE " + COLUMN_PRODUCT_OPEN_DATE + " <= '" + date.toString() + "'"
+                        + " AND " + COLUMN_PRODUCT_DUE_DATE + " >= '" + date.toString() + "'";
+        Cursor cursor = db.rawQuery(SELECT_PRODUCTS, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_TITLE));
+                    int type = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_TYPE));
+                    String strOpenDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_OPEN_DATE));
+                    String strDueDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_DUE_DATE));
+
+                    // 정보로 객체를 만들어 리스트에 추가한다.
+                    Product product = new Product(
+                            id, title, type,
+                            LocalDate.parse(strOpenDate),
+                            LocalDate.parse(strDueDate));
+                    productList.add(product);
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return productList;
+    }
+
+    // 제품 업데이트
+
+    public void updateProduct(Product product) {
+
+        // 쓰기용 DB 얻기
+        SQLiteDatabase db = this.getWritableDatabase();
+
+        // 업데이트를 위해 values 를 만든다
+        ContentValues values = new ContentValues();
+        values.put(COLUMN_PRODUCT_TITLE, product.getTitle());
+        values.put(COLUMN_PRODUCT_TYPE, product.getType());
+        values.put(COLUMN_PRODUCT_OPEN_DATE, product.getOpenDate().toString());
+        values.put(COLUMN_PRODUCT_DUE_DATE, product.getDueDate().toString());
+
+        // 데이터베이스의 id 위치에 values 를 입력하여 업데이트한다.
+        db.update(TABLE_PRODUCTS, values, COLUMN_PRODUCT_ID + " = ?",
+                new String[]{String.valueOf(product.getId())});
+    }
+
+    // 제품 삭제
+
+    public void deleteProduct(int id) {
+
+        // 쓰기용 DB 열기
+        SQLiteDatabase db = getWritableDatabase();
+
+        db.beginTransaction();
+        try {
+            // 데이터베이스에서 주어진 id를 가진 정보를 삭제한다.
+            db.delete(TABLE_PRODUCTS,
+                    COLUMN_PRODUCT_ID + "=?",
+                    new String[]{String.valueOf(id)});
+            db.setTransactionSuccessful();
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+    public List<Product> getProductByMonth(LocalDate date) {
+
+        List<Product> productList = new ArrayList<>();
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_PRODUCTS =
+                "SELECT * FROM " + TABLE_PRODUCTS;
+        Cursor cursor = db.rawQuery(SELECT_PRODUCTS, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_TITLE));
+                    int type = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_TYPE));
+                    String strOpenDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_OPEN_DATE));
+                    String strDueDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_DUE_DATE));
+
+                    // 정보로 객체를 만들어 검사후 리스트에 추가한다.
+                    Product product = new Product(
+                            id, title, type,
+                            LocalDate.parse(strOpenDate),
+                            LocalDate.parse(strDueDate));
+
+                    if (product.getOpenDate().getMonthValue() == date.getMonthValue()
+                            || product.getDueDate().getMonthValue() == date.getMonthValue()) {
+                        productList.add(product);
+                    }
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return productList;
+    }
+
+
+}
+
Index: app/src/main/java/com/example/savingdays/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/savingdays/Product.java	(date 1620305941024)
+++ app/src/main/java/com/example/savingdays/Product.java	(date 1620305941024)
@@ -0,0 +1,67 @@
+package com.example.savingdays;
+
+import java.time.LocalDate;
+
+public class Product {
+
+    public static final int TYPE_COSMETIC = 1;
+    public static final int TYPE_SHAMPOO = 2;
+
+    private final int id;
+    private final String title;
+    private final int type;
+    private final LocalDate openDate;
+    private final LocalDate dueDate;
+
+    public Product(int id, String title, int type, LocalDate openDate, LocalDate dueDate) {
+        this.id = id;
+        this.title = title;
+        this.type = type;
+        this.openDate = openDate;
+        this.dueDate = dueDate;
+    }
+
+    public Product(String title, int type, LocalDate openDate, LocalDate dueDate) {
+        this.id = -1;
+        this.title = title;
+        this.type = type;
+        this.openDate = openDate;
+        this.dueDate = dueDate;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public int getType() {
+        return type;
+    }
+
+    public LocalDate getOpenDate() {
+        return openDate;
+    }
+
+    public LocalDate getDueDate() {
+        return dueDate;
+    }
+
+    public static String getTypeName(int type) {
+
+        switch (type) {
+            case TYPE_COSMETIC:
+                return "화장품";
+            case TYPE_SHAMPOO:
+                return "샴푸";
+        }
+        return "";
+    }
+
+    public static int[] getTypes() {
+        return new int[] { TYPE_COSMETIC, TYPE_SHAMPOO };
+    }
+
+}
Index: app/src/main/java/com/example/savingdays/ScheduleAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/savingdays/ScheduleAdapter.java	(date 1620305940977)
+++ app/src/main/java/com/example/savingdays/ScheduleAdapter.java	(date 1620305940977)
@@ -0,0 +1,101 @@
+package com.example.savingdays;
+
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.savingdays.R;
+import com.example.savingdays.Schedule;
+import java.util.List;
+import java.util.Locale;
+
+
+public class ScheduleAdapter extends RecyclerView.Adapter<ScheduleAdapter.ViewHolder> {
+
+    private final List<Schedule> list;
+    private OnItemClickListener onItemClickListener;
+
+    public ScheduleAdapter(List<Schedule> list) {
+        this.list = list;
+    }
+
+    public void setOnItemClickListener(OnItemClickListener listener) {
+        this.onItemClickListener = listener;
+    }
+
+    public static class ViewHolder extends RecyclerView.ViewHolder {
+
+        private final TextView txtTitle;
+        private final TextView txtStartDate;
+        private final TextView txtEndDate;
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+
+            txtTitle = itemView.findViewById(R.id.txtScheduleTitle);
+            txtStartDate = itemView.findViewById(R.id.txtScheduleStartDate);
+            txtEndDate = itemView.findViewById(R.id.txtScheduleEndDate);
+        }
+
+        public void bind(Schedule model, OnItemClickListener listener) {
+
+            String strStartDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getStartDate().getYear(),
+                    model.getStartDate().getMonthValue(),
+                    model.getStartDate().getDayOfMonth());
+
+            String strEndDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getEndDate().getYear(),
+                    model.getEndDate().getMonthValue(),
+                    model.getEndDate().getDayOfMonth());
+
+            txtTitle.setText(model.getTitle());
+            txtStartDate.setText(strStartDate);
+            txtEndDate.setText(strEndDate);
+
+            if (listener != null) {
+                itemView.setOnClickListener(v -> {
+                    int position = getAdapterPosition();
+                    if (position != RecyclerView.NO_POSITION) {
+                        listener.onItemClick(position);
+                    }
+                });
+            }
+        }
+    }
+
+    @NonNull
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+
+        View v = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_schedule, parent, false);
+
+        return new ViewHolder(v);
+    }
+
+
+    @Override
+    public void onBindViewHolder(ViewHolder holder, int position) {
+
+        Schedule item = list.get(position);
+        holder.bind(item, onItemClickListener);
+    }
+
+    @Override
+    public int getItemCount() {
+        return list.size();
+    }
+
+    public interface OnItemClickListener {
+        void onItemClick(int position);
+    }
+
+}
\ No newline at end of file
Index: app/app/src/main/java/com/holy/scheduleapp/AddProductActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/AddProductActivity.java	(date 1619852482000)
+++ app/app/src/main/java/com/holy/scheduleapp/AddProductActivity.java	(date 1619852482000)
@@ -0,0 +1,213 @@
+package com.holy.scheduleapp;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.app.DatePickerDialog;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.Spinner;
+import android.widget.Toast;
+
+import com.holy.scheduleapp.helpers.SQLiteHelper;
+import com.holy.scheduleapp.models.Product;
+
+import java.time.LocalDate;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Locale;
+
+public class AddProductActivity extends AppCompatActivity implements View.OnClickListener {
+
+    public static final String EXTRA_PRODUCT_ID = "com.holy.scheduleapp.product_id";
+    public static final String EXTRA_SELECTED_DATE = "com.holy.scheduleapp.selected_date";
+
+    private int mProductId;                 // 제품 ID (-1 이면 추가모드, 아니면 수정모드)
+
+    private Button mOpenDateButton;         // 날짜 버튼
+    private Button mDueDateButton;
+    private EditText mProductTitleEdit;     // 제품 제목 에딧텍스트
+    private Spinner mProductTypeSpinner;    // 제품군 스피너
+
+    private LocalDate mOpenDate;            // 개봉 날짜
+    private LocalDate mDueDate;             // 소비기한 날짜
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_add_product);
+
+        // 전달된 제품 ID 를 확인한다
+        mProductId = getIntent().getIntExtra(EXTRA_PRODUCT_ID, -1);
+        Product product = null;
+        if (mProductId != -1) {
+            product = SQLiteHelper.getInstance(this).getProduct(mProductId);
+        }
+
+        mProductTitleEdit = findViewById(R.id.editProductTitle);
+        if (product != null) {
+            mProductTitleEdit.setText(product.getTitle());
+        }
+
+        // 버튼에 리스너를 설정한다
+        ImageButton cancelIButton = findViewById(R.id.ibtnCancel);
+        ImageButton confirmIButton = findViewById(R.id.ibtnConfirm);
+        cancelIButton.setOnClickListener(this);
+        confirmIButton.setOnClickListener(this);
+
+        mOpenDateButton = findViewById(R.id.btnOpenDate);
+        mDueDateButton = findViewById(R.id.btnDueDate);
+        mOpenDateButton.setOnClickListener(this);
+        mDueDateButton.setOnClickListener(this);
+
+        // 개봉, 소비기한 날짜 초기화
+        if (product != null) {
+            mOpenDate = product.getOpenDate();
+            mDueDate = product.getDueDate();
+        } else {
+            String strSelectedDate = getIntent().getStringExtra(EXTRA_SELECTED_DATE);
+            mOpenDate = LocalDate.parse(strSelectedDate);
+            mDueDate = LocalDate.parse(strSelectedDate);
+        }
+        updateDateButtons();
+
+        // 제품군 스피너 초기화
+        mProductTypeSpinner = findViewById(R.id.spinnerProductType);
+        List<String> typeNameList = new ArrayList<>();
+        int[] types = Product.getTypes();
+        for (int type : types) {
+            String typeName = Product.getTypeName(type);
+            typeNameList.add(typeName);
+        }
+        mProductTypeSpinner.setAdapter(new ArrayAdapter<>(
+                this, android.R.layout.simple_spinner_item,
+                typeNameList
+        ));
+        if (product != null) {
+            int sel = Spinner.INVALID_POSITION;
+            for (int i = 0; i < types.length; i++) {
+                if (types[i] == product.getType()) {
+                    sel = i;
+                    break;
+                }
+            }
+            mProductTypeSpinner.setSelection(sel);
+        }
+    }
+
+    // 개봉, 소비기한 날짜 버튼 업데이트
+
+    private void updateDateButtons() {
+
+        String strOpenDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mOpenDate.getYear(), mOpenDate.getMonthValue(), mOpenDate.getDayOfMonth());
+
+        String strDueDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mDueDate.getYear(), mDueDate.getMonthValue(), mDueDate.getDayOfMonth());
+
+        mOpenDateButton.setText(strOpenDate);
+        mDueDateButton.setText(strDueDate);
+    }
+
+    // 버튼 클릭을 처리한다
+
+    @Override
+    public void onClick(View v) {
+
+        int id = v.getId();
+
+        if (id == R.id.ibtnCancel) {
+            // 취소 버튼 : 액티비티 종료
+            setResult(RESULT_CANCELED);
+            finish();
+        } else if (id == R.id.ibtnConfirm) {
+            // 확인 버튼 : 제품 추가 후 액티비티 종료
+            if (addOrUpdateProduct()) {
+                setResult(RESULT_OK);
+                finish();
+            }
+        } else if (id == R.id.btnOpenDate) {
+            // 개봉 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(true);
+        } else if (id == R.id.btnDueDate) {
+            // 소비기한 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(false);
+        }
+    }
+
+    // DB 에 제품을 추가한다
+
+    private boolean addOrUpdateProduct() {
+
+        // 일정 제목을 확인한다
+        String productTitle = mProductTitleEdit.getText().toString().trim();
+
+        if (productTitle.isEmpty()) {
+            Toast.makeText(this, "제목을 입력해주세요", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+        // 제품군을 확인한다
+        int typePosition = mProductTypeSpinner.getSelectedItemPosition();
+        if (typePosition == Spinner.INVALID_POSITION) {
+            Toast.makeText(this, "제품군을 선택해주세요.", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+        int type = Product.getTypes()[typePosition];
+
+        // DB 에 추가 및 업데이트
+        Product product;
+        if (mProductId == -1) {
+            product = new Product(productTitle, type, mOpenDate, mDueDate);
+            SQLiteHelper.getInstance(this).addProduct(product);
+        } else {
+            product = new Product(mProductId, productTitle, type, mOpenDate, mDueDate);
+            SQLiteHelper.getInstance(this).updateProduct(product);
+        }
+
+        return true;
+    }
+
+    // 개봉/소비기한 날짜 선택 대화상자를 띄운다
+
+    private void showDateDialog(boolean openOrDue) {
+
+        LocalDate initialDate = openOrDue ? mOpenDate : mDueDate;
+        int initialYear = initialDate.getYear();
+        int initialMonth = initialDate.getMonthValue() - 1;
+        int initialDayOfMonth = initialDate.getDayOfMonth();
+
+        new DatePickerDialog(
+                this,
+                (view, year, month, dayOfMonth) -> {
+                    // 날짜 선택 시 개봉/소비기한 날짜를 변경한다
+                    LocalDate date = LocalDate.of(year, month + 1, dayOfMonth);
+
+                    if (openOrDue) {
+                        if (!date.isAfter(mDueDate)) {
+                            mOpenDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "앞선 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    } else {
+                        if (!date.isBefore(mOpenDate)) {
+                            mDueDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "뒤의 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                },
+                initialYear, initialMonth, initialDayOfMonth
+        ).show();
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/savingdays/AddScheduleActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/savingdays/AddScheduleActivity.java	(date 1620305940945)
+++ app/src/main/java/com/example/savingdays/AddScheduleActivity.java	(date 1620305940945)
@@ -0,0 +1,183 @@
+package com.example.savingdays;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.app.DatePickerDialog;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.Toast;
+
+import com.example.savingdays.SQLiteHelper;
+import com.example.savingdays.Product;
+import com.example.savingdays.Schedule;
+
+import java.time.LocalDate;
+import java.util.Locale;
+
+public class AddScheduleActivity extends AppCompatActivity
+        implements View.OnClickListener {
+
+    public static final String EXTRA_SCHEDULE_ID = "com.holy.scheduleapp.schedule_id";
+    public static final String EXTRA_SELECTED_DATE = "com.holy.scheduleapp.selected_date";
+
+    private int mScheduleId;                 // 일정 ID (-1 이면 추가모드, 아니면 수정모드)
+
+    private Button mStartDateButton;        // 날짜 버튼
+    private Button mEndDateButton;
+    private EditText mScheduleTitleEdit;    // 일정 제목 에딧텍스트
+
+    private LocalDate mStartDate;           // 시작 날짜
+    private LocalDate mEndDate;             // 종료 날짜
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_add_schedule);
+
+        // 전달된 일정 ID 를 확인한다
+        mScheduleId = getIntent().getIntExtra(EXTRA_SCHEDULE_ID, -1);
+        Schedule schedule = null;
+        if (mScheduleId != -1) {
+            schedule = SQLiteHelper.getInstance(this).getSchedule(mScheduleId);
+        }
+
+        mScheduleTitleEdit = findViewById(R.id.editScheduleTitle);
+        if (schedule != null) {
+            mScheduleTitleEdit.setText(schedule.getTitle());
+        }
+
+        // 버튼에 리스너를 설정한다
+        ImageButton cancelIButton = findViewById(R.id.ibtnCancel);
+        ImageButton confirmIButton = findViewById(R.id.ibtnConfirm);
+        cancelIButton.setOnClickListener(this);
+        confirmIButton.setOnClickListener(this);
+
+        mStartDateButton = findViewById(R.id.btnStartDate);
+        mEndDateButton = findViewById(R.id.btnEndDate);
+        mStartDateButton.setOnClickListener(this);
+        mEndDateButton.setOnClickListener(this);
+
+        // 시작, 종료 날짜 초기화
+
+        if (schedule != null) {
+            mStartDate = schedule.getStartDate();
+            mEndDate = schedule.getEndDate();
+        } else {
+            String strSelectedDate = getIntent().getStringExtra(EXTRA_SELECTED_DATE);
+            mStartDate = LocalDate.parse(strSelectedDate);
+            mEndDate = LocalDate.parse(strSelectedDate);
+        }
+        updateDateButtons();
+    }
+
+    // 시작, 종료 날짜 버튼 업데이트
+
+    private void updateDateButtons() {
+
+        String strStartDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mStartDate.getYear(), mStartDate.getMonthValue(), mStartDate.getDayOfMonth());
+
+        String strEndDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mEndDate.getYear(), mEndDate.getMonthValue(), mEndDate.getDayOfMonth());
+
+        mStartDateButton.setText(strStartDate);
+        mEndDateButton.setText(strEndDate);
+    }
+
+    // 버튼 클릭을 처리한다
+
+    @Override
+    public void onClick(View v) {
+
+        int id = v.getId();
+
+        if (id == R.id.ibtnCancel) {
+            // 취소 버튼 : 액티비티 종료
+            setResult(RESULT_CANCELED);
+            finish();
+        } else if (id == R.id.ibtnConfirm) {
+            // 확인 버튼 : 일정 추가 후 액티비티 종료
+            if (addOrUpdateSchedule()) {
+                setResult(RESULT_OK);
+                finish();
+            }
+        } else if (id == R.id.btnStartDate) {
+            // 시작 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(true);
+        } else if (id == R.id.btnEndDate) {
+            // 종료 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(false);
+        }
+    }
+
+    // DB 에 일정을 추가 및 업데이트한다
+
+    private boolean addOrUpdateSchedule() {
+
+        // 일정 제목을 확인한다
+        String scheduleTitle = mScheduleTitleEdit.getText().toString().trim();
+
+        if (scheduleTitle.isEmpty()) {
+            Toast.makeText(this, "제목을 입력해주세요", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+        // DB 에 추가 및 업데이트
+        Schedule schedule;
+        if (mScheduleId == -1) {
+            schedule = new Schedule(scheduleTitle, mStartDate,mEndDate);
+            SQLiteHelper.getInstance(this).addSchedule(schedule);
+        } else {
+            schedule = new Schedule(mScheduleId, scheduleTitle, mStartDate,mEndDate);
+            SQLiteHelper.getInstance(this).updateSchedule(schedule);
+        }
+
+        return true;
+    }
+
+    // 시작/종료 날짜 선택 대화상자를 띄운다
+
+    private void showDateDialog(boolean startOrEndDate) {
+
+        LocalDate initialDate = startOrEndDate ? mStartDate : mEndDate;
+        int initialYear = initialDate.getYear();
+        int initialMonth = initialDate.getMonthValue() - 1;
+        int initialDayOfMonth = initialDate.getDayOfMonth();
+
+        new DatePickerDialog(
+                this,
+                (view, year, month, dayOfMonth) -> {
+                    // 날짜 선택 시 시작/종료 날짜를 변경한다
+                    LocalDate date = LocalDate.of(year, month + 1, dayOfMonth);
+
+                    if (startOrEndDate) {
+                        if (!date.isAfter(mEndDate)) {
+                            mStartDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "앞선 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    } else {
+                        if (!date.isBefore(mStartDate)) {
+                            mEndDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "뒤의 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                },
+                initialYear, initialMonth, initialDayOfMonth
+        ).show();
+    }
+
+}
+
+
+
Index: app/app/src/main/java/com/holy/scheduleapp/AddScheduleActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/AddScheduleActivity.java	(date 1619852482000)
+++ app/app/src/main/java/com/holy/scheduleapp/AddScheduleActivity.java	(date 1619852482000)
@@ -0,0 +1,183 @@
+package com.holy.scheduleapp;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.app.DatePickerDialog;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.Toast;
+
+import com.holy.scheduleapp.helpers.SQLiteHelper;
+import com.holy.scheduleapp.models.Product;
+import com.holy.scheduleapp.models.Schedule;
+
+import java.time.LocalDate;
+import java.util.Locale;
+
+public class AddScheduleActivity extends AppCompatActivity
+        implements View.OnClickListener {
+
+    public static final String EXTRA_SCHEDULE_ID = "com.holy.scheduleapp.schedule_id";
+    public static final String EXTRA_SELECTED_DATE = "com.holy.scheduleapp.selected_date";
+
+    private int mScheduleId;                 // 일정 ID (-1 이면 추가모드, 아니면 수정모드)
+
+    private Button mStartDateButton;        // 날짜 버튼
+    private Button mEndDateButton;
+    private EditText mScheduleTitleEdit;    // 일정 제목 에딧텍스트
+
+    private LocalDate mStartDate;           // 시작 날짜
+    private LocalDate mEndDate;             // 종료 날짜
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_add_schedule);
+
+        // 전달된 일정 ID 를 확인한다
+        mScheduleId = getIntent().getIntExtra(EXTRA_SCHEDULE_ID, -1);
+        Schedule schedule = null;
+        if (mScheduleId != -1) {
+            schedule = SQLiteHelper.getInstance(this).getSchedule(mScheduleId);
+        }
+
+        mScheduleTitleEdit = findViewById(R.id.editScheduleTitle);
+        if (schedule != null) {
+            mScheduleTitleEdit.setText(schedule.getTitle());
+        }
+
+        // 버튼에 리스너를 설정한다
+        ImageButton cancelIButton = findViewById(R.id.ibtnCancel);
+        ImageButton confirmIButton = findViewById(R.id.ibtnConfirm);
+        cancelIButton.setOnClickListener(this);
+        confirmIButton.setOnClickListener(this);
+
+        mStartDateButton = findViewById(R.id.btnStartDate);
+        mEndDateButton = findViewById(R.id.btnEndDate);
+        mStartDateButton.setOnClickListener(this);
+        mEndDateButton.setOnClickListener(this);
+
+        // 시작, 종료 날짜 초기화
+
+        if (schedule != null) {
+            mStartDate = schedule.getStartDate();
+            mEndDate = schedule.getEndDate();
+        } else {
+            String strSelectedDate = getIntent().getStringExtra(EXTRA_SELECTED_DATE);
+            mStartDate = LocalDate.parse(strSelectedDate);
+            mEndDate = LocalDate.parse(strSelectedDate);
+        }
+        updateDateButtons();
+    }
+
+    // 시작, 종료 날짜 버튼 업데이트
+
+    private void updateDateButtons() {
+
+        String strStartDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mStartDate.getYear(), mStartDate.getMonthValue(), mStartDate.getDayOfMonth());
+
+        String strEndDate = String.format(Locale.getDefault(),
+                "%d년 %d월 %d일",
+                mEndDate.getYear(), mEndDate.getMonthValue(), mEndDate.getDayOfMonth());
+
+        mStartDateButton.setText(strStartDate);
+        mEndDateButton.setText(strEndDate);
+    }
+
+    // 버튼 클릭을 처리한다
+
+    @Override
+    public void onClick(View v) {
+
+        int id = v.getId();
+
+        if (id == R.id.ibtnCancel) {
+            // 취소 버튼 : 액티비티 종료
+            setResult(RESULT_CANCELED);
+            finish();
+        } else if (id == R.id.ibtnConfirm) {
+            // 확인 버튼 : 일정 추가 후 액티비티 종료
+            if (addOrUpdateSchedule()) {
+                setResult(RESULT_OK);
+                finish();
+            }
+        } else if (id == R.id.btnStartDate) {
+            // 시작 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(true);
+        } else if (id == R.id.btnEndDate) {
+            // 종료 날짜 버튼 : 날짜 선택 대화상자 띄우기
+            showDateDialog(false);
+        }
+    }
+
+    // DB 에 일정을 추가 및 업데이트한다
+
+    private boolean addOrUpdateSchedule() {
+
+        // 일정 제목을 확인한다
+        String scheduleTitle = mScheduleTitleEdit.getText().toString().trim();
+
+        if (scheduleTitle.isEmpty()) {
+            Toast.makeText(this, "제목을 입력해주세요", Toast.LENGTH_SHORT).show();
+            return false;
+        }
+
+        // DB 에 추가 및 업데이트
+        Schedule schedule;
+        if (mScheduleId == -1) {
+            schedule = new Schedule(scheduleTitle, mStartDate,mEndDate);
+            SQLiteHelper.getInstance(this).addSchedule(schedule);
+        } else {
+            schedule = new Schedule(mScheduleId, scheduleTitle, mStartDate,mEndDate);
+            SQLiteHelper.getInstance(this).updateSchedule(schedule);
+        }
+
+        return true;
+    }
+
+    // 시작/종료 날짜 선택 대화상자를 띄운다
+
+    private void showDateDialog(boolean startOrEndDate) {
+
+        LocalDate initialDate = startOrEndDate ? mStartDate : mEndDate;
+        int initialYear = initialDate.getYear();
+        int initialMonth = initialDate.getMonthValue() - 1;
+        int initialDayOfMonth = initialDate.getDayOfMonth();
+
+        new DatePickerDialog(
+                this,
+                (view, year, month, dayOfMonth) -> {
+                    // 날짜 선택 시 시작/종료 날짜를 변경한다
+                    LocalDate date = LocalDate.of(year, month + 1, dayOfMonth);
+
+                    if (startOrEndDate) {
+                        if (!date.isAfter(mEndDate)) {
+                            mStartDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "앞선 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    } else {
+                        if (!date.isBefore(mStartDate)) {
+                            mEndDate = date;
+                            updateDateButtons();
+                        } else {
+                            Toast.makeText(this,
+                                    "뒤의 날짜를 선택해주세요", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                },
+                initialYear, initialMonth, initialDayOfMonth
+        ).show();
+    }
+
+}
+
+
+
Index: app/app/src/main/java/com/holy/scheduleapp/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/MainActivity.java	(date 1619835602000)
+++ app/app/src/main/java/com/holy/scheduleapp/MainActivity.java	(date 1619835602000)
@@ -0,0 +1,20 @@
+package com.holy.scheduleapp;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+
+public class MainActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+        // CalendarFragment 를 화면에 띄운다
+        getSupportFragmentManager()
+                .beginTransaction()
+                .add(R.id.frag_container, new CalendarFragment())
+                .commit();
+    }
+}
\ No newline at end of file
Index: app/app/src/main/java/com/holy/scheduleapp/CalendarFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/CalendarFragment.java	(date 1620024178801)
+++ app/app/src/main/java/com/holy/scheduleapp/CalendarFragment.java	(date 1620024178801)
@@ -0,0 +1,413 @@
+package com.holy.scheduleapp;
+
+import android.annotation.SuppressLint;
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Intent;
+import android.graphics.Color;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.core.content.res.ResourcesCompat;
+import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.CalendarView;
+import android.widget.GridLayout;
+import android.widget.GridView;
+import android.widget.ImageButton;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.holy.scheduleapp.adapters.ProductAdapter;
+import com.holy.scheduleapp.adapters.ScheduleAdapter;
+import com.holy.scheduleapp.helpers.SQLiteHelper;
+import com.holy.scheduleapp.models.Product;
+import com.holy.scheduleapp.models.Schedule;
+
+import java.time.LocalDate;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Locale;
+
+
+public class CalendarFragment extends Fragment implements
+        View.OnClickListener, CalendarView.OnDateChangeListener {
+
+    public static final int REQUEST_ADD = 100;          // 추가하기 액티비티 요청코드
+
+    public static final int CATEGORY_SCHEDULE = 100;    // 일정 카테고리
+    public static final int CATEGORY_FOOD = 101;        // 음식 카테고리
+    public static final int CATEGORY_PRODUCT = 102;     // 소모품 카테고리
+
+    private int mCategory = CATEGORY_SCHEDULE;          // 현재 선택된 카테고리
+    private Button mScheduleButton;                     // 카테고리 버튼
+    private Button mFoodButton;
+    private Button mProductButton;
+
+    private LocalDate mSelectedDate;                    // 현재 선택된 날짜
+    private CalendarView mCalendarView;                 // 달력 뷰
+    private TextView mSelectedMonthText;                // 현재 달 텍스트뷰
+    private GridLayout mCalendarGrid;
+
+    private RecyclerView mRecycler;                     // 리사이클러뷰
+    private ScheduleAdapter mScheduleAdapter;
+    private ProductAdapter mProductAdapter;
+    private List<Schedule> mScheduleList;
+    private List<Product> mProductList;
+    private TextView mNoItemsText;
+
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View view = inflater.inflate(R.layout.fragment_calendar, container, false);
+
+        mNoItemsText = view.findViewById(R.id.txtNoItems);
+
+        // 버튼에 리스너를 설정한다
+        mScheduleButton = view.findViewById(R.id.btnSchedule);
+        mFoodButton = view.findViewById(R.id.btnFood);
+        mProductButton = view.findViewById(R.id.btnProduct);
+        mScheduleButton.setOnClickListener(this);
+        mFoodButton.setOnClickListener(this);
+        mProductButton.setOnClickListener(this);
+
+        ImageButton addIButton = view.findViewById(R.id.ibtnAdd);
+        ImageButton prevMonthIButton = view.findViewById(R.id.ibtnPrevMonth);
+        ImageButton nextMonthIButton = view.findViewById(R.id.ibtnNextMonth);
+        addIButton.setOnClickListener(this);
+        prevMonthIButton.setOnClickListener(this);
+        nextMonthIButton.setOnClickListener(this);
+
+        // 카테고리 버튼 초기화
+        updateCategoryButtons();
+
+        // 날짜 UI 초기화
+        mCalendarView = view.findViewById(R.id.calendar);
+        mCalendarGrid = view.findViewById(R.id.calendar_grid);
+        mCalendarView.setOnDateChangeListener(this);
+        mSelectedDate = LocalDate.now();
+
+        mSelectedMonthText = view.findViewById(R.id.txtSelectedMonth);
+        updateSelectedMonthUI();
+        updateCalendarGrid();
+
+        // 리사이클러뷰 초기화
+        buildRecycler(view);
+        updateRecycler();
+
+        return view;
+    }
+
+    // 카테고리 버튼 (일정, 음식, 소모품) 을 업데이트한다
+
+    private void updateCategoryButtons() {
+
+        int gray = getResources().getColor(R.color.gray, null);
+        int green = getResources().getColor(R.color.green, null);
+
+        mScheduleButton.setBackgroundColor(Color.WHITE);
+        mScheduleButton.setTextColor(gray);
+        mFoodButton.setBackgroundColor(Color.WHITE);
+        mFoodButton.setTextColor(gray);
+        mProductButton.setBackgroundColor(Color.WHITE);
+        mProductButton.setTextColor(gray);
+
+        switch (mCategory) {
+            case CATEGORY_SCHEDULE:
+                mScheduleButton.setBackgroundColor(green);
+                mScheduleButton.setTextColor(Color.WHITE);
+                break;
+            case CATEGORY_FOOD:
+                mFoodButton.setBackgroundColor(green);
+                mFoodButton.setTextColor(Color.WHITE);
+                break;
+            case CATEGORY_PRODUCT:
+                mProductButton.setBackgroundColor(green);
+                mProductButton.setTextColor(Color.WHITE);
+                break;
+        }
+    }
+
+    // 리사이클러뷰를 초기화한다
+
+    private void buildRecycler(View view) {
+
+        mRecycler = view.findViewById(R.id.recycler);
+        mRecycler.setLayoutManager(new LinearLayoutManager(getContext()));
+
+        mScheduleList = new ArrayList<>();
+        mScheduleAdapter = new ScheduleAdapter(mScheduleList);
+        mScheduleAdapter.setOnItemClickListener(position -> {
+            Schedule schedule = mScheduleList.get(position);
+            new AlertDialog.Builder(getContext())
+                    .setTitle("일정 수정")
+                    .setPositiveButton("수정하기", (dialog, which) -> {
+                        startAddActivity(schedule.getId());
+                    })
+                    .setNegativeButton("삭제하기", (dialog, which) -> {
+                        SQLiteHelper.getInstance(getContext())
+                                .deleteSchedule(schedule.getId());
+                        Toast.makeText(getContext(), "삭제가 완료되었습니다.", Toast.LENGTH_SHORT).show();
+                        updateRecycler();
+                        updateCalendarGrid();
+                    })
+                    .setNeutralButton("취소", null)
+                    .show();
+        });
+
+        mProductList = new ArrayList<>();
+        mProductAdapter = new ProductAdapter(mProductList);
+        mProductAdapter.setOnItemClickListener(position -> {
+            Product product = mProductList.get(position);
+            new AlertDialog.Builder(getContext())
+                    .setTitle("제품 수정")
+                    .setPositiveButton("수정하기", (dialog, which) -> startAddActivity(product.getId()))
+                    .setNegativeButton("삭제하기", (dialog, which) -> {
+                        SQLiteHelper.getInstance(getContext())
+                                .deleteProduct(product.getId());
+                        Toast.makeText(getContext(), "삭제가 완료되었습니다.", Toast.LENGTH_SHORT).show();
+                        updateRecycler();
+                        updateCalendarGrid();
+                    })
+                    .setNeutralButton("취소", null)
+                    .show();
+        });
+    }
+
+    // 리사이클러뷰를 업데이트한다
+
+    private void updateRecycler() {
+
+        boolean isEmpty = true;
+
+        switch (mCategory) {
+            case CATEGORY_SCHEDULE:
+                // 리사이클러뷰에 일정 목록을 띄운다
+                mRecycler.setAdapter(mScheduleAdapter);
+                mScheduleList.clear();
+                mScheduleList.addAll(SQLiteHelper.getInstance(getContext())
+                        .getScheduleByDate(mSelectedDate));
+                isEmpty = mScheduleList.isEmpty();
+                break;
+            case CATEGORY_PRODUCT:
+                // 리사이클러뷰에 소모품 목록을 띄운다
+                mRecycler.setAdapter(mProductAdapter);
+                mProductList.clear();
+                mProductList.addAll(SQLiteHelper.getInstance(getContext())
+                        .getProductByDate(mSelectedDate));
+                isEmpty = mProductList.isEmpty();
+                break;
+        }
+
+        // 항목이 없으면 문구를 보여준다
+        mNoItemsText.setVisibility(isEmpty ? View.VISIBLE : View.INVISIBLE);
+        mRecycler.setVisibility(isEmpty ? View.INVISIBLE : View.VISIBLE);
+    }
+
+    // 현재 달 UI 를 업데이트한다
+    private void updateSelectedMonthUI() {
+
+        String strSelectedMonth = String.format(Locale.getDefault(),
+                "%s %d",
+                mSelectedDate.getMonth().toString(), mSelectedDate.getYear());
+
+        mSelectedMonthText.setText(strSelectedMonth);
+    }
+
+    // 달력 격자 업데이트 : 항목이 존재하는 달력 날짜 하이라이트
+
+    private void updateCalendarGrid() {
+
+        Drawable normal = ResourcesCompat.getDrawable(getResources(),
+                R.drawable.calendar_cell, null);
+        Drawable highlighted = ResourcesCompat.getDrawable(getResources(),
+                R.drawable.calendar_cell_highlighted, null);
+
+        // 모든 날짜 하이라이트 해제
+        for (int i = 0; i < 42; i++) {
+            View dayView = mCalendarGrid.getChildAt(7 + i);
+            dayView.setBackground(normal);
+        }
+
+        // 항목이 존재하는 날짜에만 하이라이트
+        LocalDate firstDate;
+        int firstPosition, maxDays;
+
+        switch (mCategory) {
+            case CATEGORY_SCHEDULE:
+                List<Schedule> scheduleList = SQLiteHelper.getInstance(getContext())
+                        .getScheduleByMonth(mSelectedDate);
+
+                firstDate = mSelectedDate.withDayOfMonth(1);
+                firstPosition = 7 + (firstDate.getDayOfWeek().getValue() % 7);
+                maxDays = mSelectedDate.getMonth().maxLength();
+
+                for (int i = 0; i < maxDays; i++) {
+                    LocalDate date = mSelectedDate.withDayOfMonth(i + 1);
+                    View dayView = mCalendarGrid.getChildAt(firstPosition + date.getDayOfMonth() - 1);
+
+                    for (Schedule schedule : scheduleList) {
+                        if (!date.isBefore(schedule.getStartDate())
+                                && !date.isAfter(schedule.getEndDate())) {
+                            dayView.setBackground(highlighted);
+                            break;
+                        }
+                    }
+                }
+                break;
+            case CATEGORY_PRODUCT:
+                List<Product> productList = SQLiteHelper.getInstance(getContext())
+                        .getProductByMonth(mSelectedDate);
+
+                firstDate = mSelectedDate.withDayOfMonth(1);
+                firstPosition = 7 + (firstDate.getDayOfWeek().getValue() % 7);
+                maxDays = mSelectedDate.getMonth().maxLength();
+
+                for (int i = 0; i < maxDays; i++) {
+                    LocalDate date = mSelectedDate.withDayOfMonth(i + 1);
+                    View dayView = mCalendarGrid.getChildAt(firstPosition + date.getDayOfMonth() - 1);
+
+                    for (Product product : productList) {
+                        if (!date.isBefore(product.getOpenDate())
+                                && !date.isAfter(product.getDueDate())) {
+                            dayView.setBackground(highlighted);
+                            break;
+                        }
+                    }
+                }
+                break;
+        }
+    }
+
+    // 버튼 클릭을 처리한다
+
+    @Override
+    public void onClick(View v) {
+
+        int id = v.getId();
+
+        if (id == R.id.btnSchedule) {
+            selectCategory(CATEGORY_SCHEDULE);
+        } else if (id == R.id.btnFood) {
+            selectCategory(CATEGORY_FOOD);
+        } else if (id == R.id.btnProduct) {
+            selectCategory(CATEGORY_PRODUCT);
+        } else if (id == R.id.ibtnAdd) {
+            startAddActivity(-1);
+        } else if (id == R.id.ibtnPrevMonth) {
+            moveToPrevMonth();
+        } else if (id == R.id.ibtnNextMonth) {
+            moveToNextMonth();
+        }
+    }
+
+    // 달력에서 특정 날짜를 선택했을 때
+
+    @Override
+    public void onSelectedDayChange(@NonNull CalendarView view, int year, int month, int dayOfMonth) {
+
+        mSelectedDate = LocalDate.of(year, month + 1, dayOfMonth);
+
+        // 리사이클러뷰 업데이트
+        updateRecycler();
+
+        // 선택된 달 UI 업데이트
+        updateSelectedMonthUI();
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        if (requestCode == REQUEST_ADD) {
+            // 추가 액티비티에서 추가가 실행된 경우 리사이클러뷰 업데이트
+            if (resultCode == Activity.RESULT_OK) {
+                updateRecycler();
+                updateCalendarGrid();
+            }
+        }
+    }
+
+    // 추가/수정하기 액티비티를 시작한다
+
+    private void startAddActivity(int id) {
+
+        Intent intent = null;
+
+        switch (mCategory) {
+            case CATEGORY_SCHEDULE:
+                intent = new Intent(getContext(), AddScheduleActivity.class);
+                if (id != -1) {
+                    intent.putExtra(AddScheduleActivity.EXTRA_SCHEDULE_ID, id);
+                }
+                intent.putExtra(AddScheduleActivity.EXTRA_SELECTED_DATE, mSelectedDate.toString());
+                break;
+            case CATEGORY_PRODUCT:
+                intent = new Intent(getContext(), AddProductActivity.class);
+                if (id != -1) {
+                    intent.putExtra(AddProductActivity.EXTRA_PRODUCT_ID, id);
+                }
+                intent.putExtra(AddProductActivity.EXTRA_SELECTED_DATE, mSelectedDate.toString());
+                break;
+        }
+
+        if (intent != null) {
+            startActivityForResult(intent, REQUEST_ADD);
+        }
+    }
+
+    // 카테고리 선택하기
+
+    private void selectCategory(int newCategory) {
+
+        mCategory = newCategory;
+        updateCategoryButtons();
+        updateRecycler();
+        updateCalendarGrid();
+    }
+
+    // 이전 달로 이동
+
+    private void moveToPrevMonth() {
+
+        mSelectedDate = mSelectedDate.minusMonths(1);
+        mCalendarView.setDate(mSelectedDate.toEpochDay() * 86400 * 1000);
+
+        // 리사이클러뷰 업데이트
+        updateRecycler();
+
+        // 선택된 달 UI 업데이트
+        updateSelectedMonthUI();
+
+        updateCalendarGrid();
+    }
+
+    // 다음 달로 이동
+
+    private void moveToNextMonth() {
+
+        mSelectedDate = mSelectedDate.plusMonths(1);
+        mCalendarView.setDate(mSelectedDate.toEpochDay() * 86400 * 1000);
+
+        // 리사이클러뷰 업데이트
+        updateRecycler();
+
+        // 선택된 달 UI 업데이트
+        updateSelectedMonthUI();
+
+        updateCalendarGrid();
+    }
+
+}
+
+
Index: app/app/src/main/java/com/holy/scheduleapp/models/Schedule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/models/Schedule.java	(date 1619842850000)
+++ app/app/src/main/java/com/holy/scheduleapp/models/Schedule.java	(date 1619842850000)
@@ -0,0 +1,42 @@
+package com.holy.scheduleapp.models;
+
+import java.time.LocalDate;
+
+public class Schedule {
+
+    private final int id;
+    private final String title;
+    private final LocalDate startDate;
+    private final LocalDate endDate;
+
+    public Schedule(int id, String title, LocalDate startDate, LocalDate endDate) {
+        this.id = id;
+        this.title = title;
+        this.startDate = startDate;
+        this.endDate = endDate;
+    }
+
+    public Schedule(String title, LocalDate startDate, LocalDate endDate) {
+        this.id = -1;
+        this.title = title;
+        this.startDate = startDate;
+        this.endDate = endDate;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public LocalDate getStartDate() {
+        return startDate;
+    }
+
+    public LocalDate getEndDate() {
+        return endDate;
+    }
+
+}
Index: app/app/src/main/java/com/holy/scheduleapp/models/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/models/Product.java	(date 1619849286000)
+++ app/app/src/main/java/com/holy/scheduleapp/models/Product.java	(date 1619849286000)
@@ -0,0 +1,67 @@
+package com.holy.scheduleapp.models;
+
+import java.time.LocalDate;
+
+public class Product {
+
+    public static final int TYPE_COSMETIC = 1;
+    public static final int TYPE_SHAMPOO = 2;
+
+    private final int id;
+    private final String title;
+    private final int type;
+    private final LocalDate openDate;
+    private final LocalDate dueDate;
+
+    public Product(int id, String title, int type, LocalDate openDate, LocalDate dueDate) {
+        this.id = id;
+        this.title = title;
+        this.type = type;
+        this.openDate = openDate;
+        this.dueDate = dueDate;
+    }
+
+    public Product(String title, int type, LocalDate openDate, LocalDate dueDate) {
+        this.id = -1;
+        this.title = title;
+        this.type = type;
+        this.openDate = openDate;
+        this.dueDate = dueDate;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public int getType() {
+        return type;
+    }
+
+    public LocalDate getOpenDate() {
+        return openDate;
+    }
+
+    public LocalDate getDueDate() {
+        return dueDate;
+    }
+
+    public static String getTypeName(int type) {
+
+        switch (type) {
+            case TYPE_COSMETIC:
+                return "화장품";
+            case TYPE_SHAMPOO:
+                return "샴푸";
+        }
+        return "";
+    }
+
+    public static int[] getTypes() {
+        return new int[] { TYPE_COSMETIC, TYPE_SHAMPOO };
+    }
+
+}
Index: app/app/src/main/java/com/holy/scheduleapp/helpers/SQLiteHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/helpers/SQLiteHelper.java	(date 1619857146000)
+++ app/app/src/main/java/com/holy/scheduleapp/helpers/SQLiteHelper.java	(date 1619857146000)
@@ -0,0 +1,485 @@
+package com.holy.scheduleapp.helpers;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+import androidx.annotation.Nullable;
+
+import com.holy.scheduleapp.models.Product;
+import com.holy.scheduleapp.models.Schedule;
+
+import java.time.LocalDate;
+import java.util.ArrayList;
+import java.util.List;
+
+public class SQLiteHelper extends SQLiteOpenHelper {
+
+    // 데이터베이스 이름
+    private static final String DATABASE_NAME = "database";
+    // 현재 버전
+    private static final int DATABASE_VERSION = 2;
+
+    // 일정 테이블의 정보
+    public static final String TABLE_SCHEDULES = "schedules";
+    public static final String COLUMN_SCHEDULE_ID = "id";
+    public static final String COLUMN_SCHEDULE_TITLE = "title";
+    public static final String COLUMN_SCHEDULE_START_DATE = "startDate";
+    public static final String COLUMN_SCHEDULE_END_DATE = "endDate";
+
+    // 제품 테이블의 정보
+    public static final String TABLE_PRODUCTS = "products";
+    public static final String COLUMN_PRODUCT_ID = "id";
+    public static final String COLUMN_PRODUCT_TITLE = "title";
+    public static final String COLUMN_PRODUCT_TYPE = "type";
+    public static final String COLUMN_PRODUCT_OPEN_DATE = "openDate";
+    public static final String COLUMN_PRODUCT_DUE_DATE = "dueDate";
+
+    // 데이터베이스 헬퍼 객체
+    private static SQLiteHelper instance;
+
+    // 데이터베이스 헬퍼 객체 구하기.
+    public static synchronized SQLiteHelper getInstance(Context context) {
+        if (instance == null) {
+            instance = new SQLiteHelper(context.getApplicationContext());
+        }
+        return instance;
+    }
+
+    // 생성자
+    public SQLiteHelper(@Nullable Context context) {
+        super(context, DATABASE_NAME, null, DATABASE_VERSION);
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+
+        // 초기화 : 데이터베이스에 일정 테이블을 생성한다.
+        String CREATE_SCHEDULES_TABLE = "CREATE TABLE " + TABLE_SCHEDULES +
+                "(" +
+                COLUMN_SCHEDULE_ID + " INTEGER PRIMARY KEY, " +
+                COLUMN_SCHEDULE_TITLE + " TEXT NOT NULL, " +
+                COLUMN_SCHEDULE_START_DATE + " TEXT NOT NULL, " +
+                COLUMN_SCHEDULE_END_DATE + " TEXT NOT NULL" +
+                ")";
+        db.execSQL(CREATE_SCHEDULES_TABLE);
+
+        // 초기화 : 데이터베이스에 제품 테이블을 생성한다.
+        String CREATE_PRODUCTS_TABLE = "CREATE TABLE " + TABLE_PRODUCTS +
+                "(" +
+                COLUMN_PRODUCT_ID + " INTEGER PRIMARY KEY, " +
+                COLUMN_PRODUCT_TITLE + " TEXT NOT NULL, " +
+                COLUMN_PRODUCT_TYPE + " INTEGER NOT NULL, " +
+                COLUMN_PRODUCT_OPEN_DATE + " TEXT NOT NULL, " +
+                COLUMN_PRODUCT_DUE_DATE + " TEXT NOT NULL" +
+                ")";
+        db.execSQL(CREATE_PRODUCTS_TABLE);
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+
+        // 기존의 데이터베이스 버전이 현재와 다르면 테이블을 지우고 빈 테이블 다시 만들기.
+        if (oldVersion != newVersion) {
+            db.execSQL("DROP TABLE IF EXISTS " + TABLE_SCHEDULES);
+            db.execSQL("DROP TABLE IF EXISTS " + TABLE_PRODUCTS);
+            onCreate(db);
+        }
+    }
+
+    // 일정 추가
+
+    public void addSchedule(Schedule schedule) {
+
+        // 쓰기용 DB 를 연다.
+        SQLiteDatabase db = getWritableDatabase();
+
+        // DB 입력 시작
+        db.beginTransaction();
+        try {
+            // 정보를 모두 values 객체에 입력한다
+            ContentValues values = new ContentValues();
+            values.put(COLUMN_SCHEDULE_TITLE, schedule.getTitle());
+            values.put(COLUMN_SCHEDULE_START_DATE, schedule.getStartDate().toString());
+            values.put(COLUMN_SCHEDULE_END_DATE, schedule.getEndDate().toString());
+
+            // 데이터베이스에 values 를 입력한다.
+            db.insertOrThrow(TABLE_SCHEDULES, null, values);
+            db.setTransactionSuccessful();
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+    // 일정 조회
+
+    public Schedule getSchedule(int id) {
+
+        Schedule schedule = null;
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_SCHEDULES = "SELECT * FROM " + TABLE_SCHEDULES
+                + " WHERE " + COLUMN_SCHEDULE_ID + " = " + id;
+        Cursor cursor = db.rawQuery(SELECT_SCHEDULES, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+
+                // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                String title = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_TITLE));
+                String strStartDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_START_DATE));
+                String strEndDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_END_DATE));
+
+                // 정보로 객체를 만들어 리스트에 추가한다.
+                schedule = new Schedule(
+                        id, title,
+                        LocalDate.parse(strStartDate),
+                        LocalDate.parse(strEndDate));
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return schedule;
+    }
+
+    public List<Schedule> getScheduleByDate(LocalDate date) {
+
+        List<Schedule> scheduleList = new ArrayList<>();
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_SCHEDULES =
+                "SELECT * FROM " + TABLE_SCHEDULES
+                        + " WHERE " + COLUMN_SCHEDULE_START_DATE + " <= '" + date.toString() + "'"
+                        + " AND " + COLUMN_SCHEDULE_END_DATE + " >= '" + date.toString() + "'";
+        Cursor cursor = db.rawQuery(SELECT_SCHEDULES, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_SCHEDULE_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_TITLE));
+                    String strStartDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_START_DATE));
+                    String strEndDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_END_DATE));
+
+                    // 정보로 객체를 만들어 리스트에 추가한다.
+                    Schedule schedule = new Schedule(
+                            id, title,
+                            LocalDate.parse(strStartDate),
+                            LocalDate.parse(strEndDate));
+                    scheduleList.add(schedule);
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return scheduleList;
+    }
+
+    public List<Schedule> getScheduleByMonth(LocalDate date) {
+
+        List<Schedule> scheduleList = new ArrayList<>();
+
+        LocalDate nextMonth = date.plusMonths(1);
+        LocalDate prevMonth = date.minusMonths(1);
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_SCHEDULES =
+                "SELECT * FROM " + TABLE_SCHEDULES;
+        Cursor cursor = db.rawQuery(SELECT_SCHEDULES, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_SCHEDULE_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_TITLE));
+                    String strStartDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_START_DATE));
+                    String strEndDate = cursor.getString(cursor.getColumnIndex(COLUMN_SCHEDULE_END_DATE));
+
+                    // 정보로 객체를 만들어 검사후 리스트에 추가한다.
+                    Schedule schedule = new Schedule(
+                            id, title,
+                            LocalDate.parse(strStartDate),
+                            LocalDate.parse(strEndDate));
+
+                    if (schedule.getStartDate().getMonthValue() == date.getMonthValue()
+                            || schedule.getEndDate().getMonthValue() == date.getMonthValue()) {
+                        scheduleList.add(schedule);
+                    }
+                    scheduleList.add(schedule);
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return scheduleList;
+    }
+
+    // 일정 업데이트
+
+    public void updateSchedule(Schedule schedule) {
+
+        // 쓰기용 DB 얻기
+        SQLiteDatabase db = this.getWritableDatabase();
+
+        ContentValues values = new ContentValues();
+        values.put(COLUMN_SCHEDULE_TITLE, schedule.getTitle());
+        values.put(COLUMN_SCHEDULE_START_DATE, schedule.getStartDate().toString());
+        values.put(COLUMN_SCHEDULE_END_DATE, schedule.getEndDate().toString());
+
+        db.update(TABLE_SCHEDULES, values, COLUMN_SCHEDULE_ID + " = ?",
+                new String[]{String.valueOf(schedule.getId())});
+    }
+
+    // 일정 삭제
+
+    public void deleteSchedule(int id) {
+
+        // 쓰기용 DB 열기
+        SQLiteDatabase db = getWritableDatabase();
+
+        db.beginTransaction();
+        try {
+            // 데이터베이스에서 주어진 id를 가진 정보를 삭제한다.
+            db.delete(TABLE_SCHEDULES,
+                    COLUMN_SCHEDULE_ID + "=?",
+                    new String[]{String.valueOf(id)});
+            db.setTransactionSuccessful();
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+
+
+    // 제품 추가
+
+    public void addProduct(Product product) {
+
+        // 쓰기용 DB 를 연다.
+        SQLiteDatabase db = getWritableDatabase();
+
+        // DB 입력 시작
+        db.beginTransaction();
+        try {
+            // 정보를 모두 values 객체에 입력한다
+            ContentValues values = new ContentValues();
+            values.put(COLUMN_PRODUCT_TITLE, product.getTitle());
+            values.put(COLUMN_PRODUCT_TYPE, product.getType());
+            values.put(COLUMN_PRODUCT_OPEN_DATE, product.getOpenDate().toString());
+            values.put(COLUMN_PRODUCT_DUE_DATE, product.getDueDate().toString());
+
+            // 데이터베이스에 values 를 입력한다.
+            db.insertOrThrow(TABLE_PRODUCTS, null, values);
+            db.setTransactionSuccessful();
+
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+    // 제품 조회
+
+    public Product getProduct(int id) {
+
+        Product product = null;
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_PRODUCTS = "SELECT * FROM " + TABLE_PRODUCTS
+                + " WHERE " + COLUMN_PRODUCT_ID + " = " + id;
+        Cursor cursor = db.rawQuery(SELECT_PRODUCTS, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+
+                // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                String title = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_TITLE));
+                int type = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_TYPE));
+                String strOpenDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_OPEN_DATE));
+                String strDueDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_DUE_DATE));
+
+                // 정보로 객체를 만들어 리스트에 추가한다.
+                product = new Product(
+                        id, title, type,
+                        LocalDate.parse(strOpenDate),
+                        LocalDate.parse(strDueDate));
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return product;
+    }
+
+    public List<Product> getProductByDate(LocalDate date) {
+
+        List<Product> productList = new ArrayList<>();
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_PRODUCTS =
+                "SELECT * FROM " + TABLE_PRODUCTS
+                        + " WHERE " + COLUMN_PRODUCT_OPEN_DATE + " <= '" + date.toString() + "'"
+                        + " AND " + COLUMN_PRODUCT_DUE_DATE + " >= '" + date.toString() + "'";
+        Cursor cursor = db.rawQuery(SELECT_PRODUCTS, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    // 커서를 움직이면서 테이블의 정보들을 가져온다.
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_TITLE));
+                    int type = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_TYPE));
+                    String strOpenDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_OPEN_DATE));
+                    String strDueDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_DUE_DATE));
+
+                    // 정보로 객체를 만들어 리스트에 추가한다.
+                    Product product = new Product(
+                            id, title, type,
+                            LocalDate.parse(strOpenDate),
+                            LocalDate.parse(strDueDate));
+                    productList.add(product);
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return productList;
+    }
+
+    // 제품 업데이트
+
+    public void updateProduct(Product product) {
+
+        // 쓰기용 DB 얻기
+        SQLiteDatabase db = this.getWritableDatabase();
+
+        // 업데이트를 위해 values 를 만든다
+        ContentValues values = new ContentValues();
+        values.put(COLUMN_PRODUCT_TITLE, product.getTitle());
+        values.put(COLUMN_PRODUCT_TYPE, product.getType());
+        values.put(COLUMN_PRODUCT_OPEN_DATE, product.getOpenDate().toString());
+        values.put(COLUMN_PRODUCT_DUE_DATE, product.getDueDate().toString());
+
+        // 데이터베이스의 id 위치에 values 를 입력하여 업데이트한다.
+        db.update(TABLE_PRODUCTS, values, COLUMN_PRODUCT_ID + " = ?",
+                new String[]{String.valueOf(product.getId())});
+    }
+
+    // 제품 삭제
+
+    public void deleteProduct(int id) {
+
+        // 쓰기용 DB 열기
+        SQLiteDatabase db = getWritableDatabase();
+
+        db.beginTransaction();
+        try {
+            // 데이터베이스에서 주어진 id를 가진 정보를 삭제한다.
+            db.delete(TABLE_PRODUCTS,
+                    COLUMN_PRODUCT_ID + "=?",
+                    new String[]{String.valueOf(id)});
+            db.setTransactionSuccessful();
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            db.endTransaction();
+        }
+    }
+
+    public List<Product> getProductByMonth(LocalDate date) {
+
+        List<Product> productList = new ArrayList<>();
+
+        // 읽기용 DB 열기
+        SQLiteDatabase db = getReadableDatabase();
+
+        // 데이터베이스의 테이블을 가리키는 커서를 가져온다.
+        String SELECT_PRODUCTS =
+                "SELECT * FROM " + TABLE_PRODUCTS;
+        Cursor cursor = db.rawQuery(SELECT_PRODUCTS, null);
+
+        try {
+            if (cursor.moveToFirst()) {
+                do {
+                    int id = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_ID));
+                    String title = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_TITLE));
+                    int type = cursor.getInt(cursor.getColumnIndex(COLUMN_PRODUCT_TYPE));
+                    String strOpenDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_OPEN_DATE));
+                    String strDueDate = cursor.getString(cursor.getColumnIndex(COLUMN_PRODUCT_DUE_DATE));
+
+                    // 정보로 객체를 만들어 검사후 리스트에 추가한다.
+                    Product product = new Product(
+                            id, title, type,
+                            LocalDate.parse(strOpenDate),
+                            LocalDate.parse(strDueDate));
+
+                    if (product.getOpenDate().getMonthValue() == date.getMonthValue()
+                        || product.getDueDate().getMonthValue() == date.getMonthValue()) {
+                        productList.add(product);
+                    }
+
+                    // 테이블 끝에 도달할 때까지 실시한다.
+                } while (cursor.moveToNext());
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (cursor != null && !cursor.isClosed()) {
+                cursor.close();
+            }
+        }
+        return productList;
+    }
+
+
+}
Index: app/app/src/main/java/com/holy/scheduleapp/adapters/ProductAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/adapters/ProductAdapter.java	(date 1619850312000)
+++ app/app/src/main/java/com/holy/scheduleapp/adapters/ProductAdapter.java	(date 1619850312000)
@@ -0,0 +1,103 @@
+package com.holy.scheduleapp.adapters;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.holy.scheduleapp.R;
+import com.holy.scheduleapp.models.Product;
+
+import java.util.List;
+import java.util.Locale;
+
+public class ProductAdapter extends RecyclerView.Adapter<ProductAdapter.ViewHolder> {
+
+    private final List<Product> list;
+    private OnItemClickListener onItemClickListener;
+
+    public ProductAdapter(List<Product> list) {
+        this.list = list;
+    }
+
+    public void setOnItemClickListener(OnItemClickListener listener) {
+        this.onItemClickListener = listener;
+    }
+
+    public static class ViewHolder extends RecyclerView.ViewHolder {
+
+        private final TextView txtTitle;
+        private final TextView txtType;
+        private final TextView txtOpenDate;
+        private final TextView txtDueDate;
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+
+            txtTitle = itemView.findViewById(R.id.txtProductTitle);
+            txtType = itemView.findViewById(R.id.txtProductType);
+            txtOpenDate = itemView.findViewById(R.id.txtProductOpenDate);
+            txtDueDate = itemView.findViewById(R.id.txtProductDueDate);
+        }
+
+        public void bind(Product model, OnItemClickListener listener) {
+
+            String strOpenDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getOpenDate().getYear(),
+                    model.getOpenDate().getMonthValue(),
+                    model.getOpenDate().getDayOfMonth());
+
+            String strDueDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getDueDate().getYear(),
+                    model.getDueDate().getMonthValue(),
+                    model.getDueDate().getDayOfMonth());
+
+            txtTitle.setText(model.getTitle());
+            txtType.setText(Product.getTypeName(model.getType()));
+            txtOpenDate.setText(strOpenDate);
+            txtDueDate.setText(strDueDate);
+
+            if (listener != null) {
+                itemView.setOnClickListener(v -> {
+                    int position = getAdapterPosition();
+                    if (position != RecyclerView.NO_POSITION) {
+                        listener.onItemClick(position);
+                    }
+                });
+            }
+        }
+    }
+
+    @NonNull
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+
+        View v = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_product, parent, false);
+
+        return new ViewHolder(v);
+    }
+
+
+    @Override
+    public void onBindViewHolder(ViewHolder holder, int position) {
+
+        Product item = list.get(position);
+        holder.bind(item, onItemClickListener);
+    }
+
+    @Override
+    public int getItemCount() {
+        return list.size();
+    }
+
+    public interface OnItemClickListener {
+        void onItemClick(int position);
+    }
+
+}
\ No newline at end of file
Index: app/app/src/main/java/com/holy/scheduleapp/adapters/ScheduleAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/main/java/com/holy/scheduleapp/adapters/ScheduleAdapter.java	(date 1619850354000)
+++ app/app/src/main/java/com/holy/scheduleapp/adapters/ScheduleAdapter.java	(date 1619850354000)
@@ -0,0 +1,101 @@
+package com.holy.scheduleapp.adapters;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.holy.scheduleapp.R;
+import com.holy.scheduleapp.models.Schedule;
+
+import java.util.List;
+import java.util.Locale;
+
+
+public class ScheduleAdapter extends RecyclerView.Adapter<ScheduleAdapter.ViewHolder> {
+
+    private final List<Schedule> list;
+    private OnItemClickListener onItemClickListener;
+
+    public ScheduleAdapter(List<Schedule> list) {
+        this.list = list;
+    }
+
+    public void setOnItemClickListener(OnItemClickListener listener) {
+        this.onItemClickListener = listener;
+    }
+
+    public static class ViewHolder extends RecyclerView.ViewHolder {
+
+        private final TextView txtTitle;
+        private final TextView txtStartDate;
+        private final TextView txtEndDate;
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+
+            txtTitle = itemView.findViewById(R.id.txtScheduleTitle);
+            txtStartDate = itemView.findViewById(R.id.txtScheduleStartDate);
+            txtEndDate = itemView.findViewById(R.id.txtScheduleEndDate);
+        }
+
+        public void bind(Schedule model, OnItemClickListener listener) {
+
+            String strStartDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getStartDate().getYear(),
+                    model.getStartDate().getMonthValue(),
+                    model.getStartDate().getDayOfMonth());
+
+            String strEndDate = String.format(Locale.getDefault(),
+                    "%d년 %d월 %d일",
+                    model.getEndDate().getYear(),
+                    model.getEndDate().getMonthValue(),
+                    model.getEndDate().getDayOfMonth());
+
+            txtTitle.setText(model.getTitle());
+            txtStartDate.setText(strStartDate);
+            txtEndDate.setText(strEndDate);
+
+            if (listener != null) {
+                itemView.setOnClickListener(v -> {
+                    int position = getAdapterPosition();
+                    if (position != RecyclerView.NO_POSITION) {
+                        listener.onItemClick(position);
+                    }
+                });
+            }
+        }
+    }
+
+    @NonNull
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+
+        View v = LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.item_schedule, parent, false);
+
+        return new ViewHolder(v);
+    }
+
+
+    @Override
+    public void onBindViewHolder(ViewHolder holder, int position) {
+
+        Schedule item = list.get(position);
+        holder.bind(item, onItemClickListener);
+    }
+
+    @Override
+    public int getItemCount() {
+        return list.size();
+    }
+
+    public interface OnItemClickListener {
+        void onItemClick(int position);
+    }
+
+}
\ No newline at end of file
Index: app/app/src/test/java/com/holy/scheduleapp/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/test/java/com/holy/scheduleapp/ExampleUnitTest.java	(date 1619792222000)
+++ app/app/src/test/java/com/holy/scheduleapp/ExampleUnitTest.java	(date 1619792222000)
@@ -0,0 +1,17 @@
+package com.holy.scheduleapp;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/app/src/androidTest/java/com/holy/scheduleapp/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/app/src/androidTest/java/com/holy/scheduleapp/ExampleInstrumentedTest.java	(date 1619792222000)
+++ app/app/src/androidTest/java/com/holy/scheduleapp/ExampleInstrumentedTest.java	(date 1619792222000)
@@ -0,0 +1,26 @@
+package com.holy.scheduleapp;
+
+import android.content.Context;
+
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
+        assertEquals("com.holy.scheduleapp", appContext.getPackageName());
+    }
+}
\ No newline at end of file
